#pragma checksum "C:\Infonet_final\InfonetUI-UWP_Dev\Infonet.CStoreCommander.UI\Controls\NumberPad.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "408935AA370EA1A3CF77E7F8324838BE"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.Controls
{
    partial class NumberPad : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Infonet_CStoreCommander_UI_Controls_SecondFrameHeading_Text(global::Infonet.CStoreCommander.UI.Controls.SecondFrameHeading obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Infonet_CStoreCommander_UI_Controls_SecondFrameHeading_BackArrowVisibility(global::Infonet.CStoreCommander.UI.Controls.SecondFrameHeading obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.BackArrowVisibility = value;
            }
            public static void Set_Infonet_CStoreCommander_UI_Controls_SecondFrameHeading_PreviousFrame(global::Infonet.CStoreCommander.UI.Controls.SecondFrameHeading obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.PreviousFrame = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
        };

        private class NumberPad_obj5_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            INumberPad_Bindings
        {
            private global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj5;

            private NumberPad_obj5_BindingsTracking bindingsTracking;

            public NumberPad_obj5_Bindings()
            {
                this.bindingsTracking = new NumberPad_obj5_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5:
                        this.obj5 = new global::System.WeakReference((global::Infonet.CStoreCommander.ControlLib.GenericButton)target);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel data = args.NewValue as global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Infonet.CStoreCommander.ControlLib.GenericButton)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // INumberPad_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // NumberPad_obj5_Bindings

            public void SetDataRoot(global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Value(obj.Value, phase);
                        this.Update_Button(obj.Button, phase);
                    }
                }
            }
            private void Update_Value(global::System.Int32 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj5.Target as global::Infonet.CStoreCommander.ControlLib.GenericButton, obj, null);
                }
            }
            private void Update_Button(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj5.Target as global::Infonet.CStoreCommander.ControlLib.GenericButton, obj, null);
                }
            }

            private class NumberPad_obj5_BindingsTracking
            {
                global::System.WeakReference<NumberPad_obj5_Bindings> WeakRefToBindingObj; 

                public NumberPad_obj5_BindingsTracking(NumberPad_obj5_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<NumberPad_obj5_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NumberPad_obj5_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel obj = sender as global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_Value(obj.Value, DATA_CHANGED);
                                    bindings.Update_Button(obj.Button, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Button":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Button(obj.Button, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel obj)
                {
                    NumberPad_obj5_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class NumberPad_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            INumberPad_Bindings
        {
            private global::Infonet.CStoreCommander.UI.Controls.NumberPad dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Infonet.CStoreCommander.UI.Controls.SecondFrameHeading obj3;
            private global::Windows.UI.Xaml.Controls.GridView obj4;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj6;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj7;
            private global::Windows.UI.Xaml.Controls.Button obj8;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj9;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj10;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj11;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj12;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj13;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj14;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj15;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj16;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj17;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj18;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj19;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj20;
            private global::Windows.UI.Xaml.Controls.Button obj21;
            private global::Windows.UI.Xaml.Controls.TextBlock obj22;

            private NumberPad_obj1_BindingsTracking bindingsTracking;

            public NumberPad_obj1_Bindings()
            {
                this.bindingsTracking = new NumberPad_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = (global::Infonet.CStoreCommander.UI.Controls.SecondFrameHeading)target;
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 6:
                        this.obj6 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 7:
                        this.obj7 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 8:
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 9:
                        this.obj9 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 10:
                        this.obj10 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 11:
                        this.obj11 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 12:
                        this.obj12 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 13:
                        this.obj13 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 14:
                        this.obj14 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 15:
                        this.obj15 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 16:
                        this.obj16 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 17:
                        this.obj17 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 18:
                        this.obj18 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 19:
                        this.obj19 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 20:
                        this.obj20 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 21:
                        this.obj21 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 22:
                        this.obj22 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // INumberPad_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // NumberPad_obj1_Bindings

            public void SetDataRoot(global::Infonet.CStoreCommander.UI.Controls.NumberPad newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.Controls.NumberPad obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Text(obj.Text, phase);
                        this.Update_BackArrowVisibility(obj.BackArrowVisibility, phase);
                        this.Update_BackNavigation(obj.BackNavigation, phase);
                        this.Update_IsDollarVisible(obj.IsDollarVisible, phase);
                        this.Update_CashButtonItemSource(obj.CashButtonItemSource, phase);
                        this.Update_IsSubtractionEnabled(obj.IsSubtractionEnabled, phase);
                        this.Update_NumberpadVM(obj.NumberpadVM, phase);
                        this.Update_IsAdditionEnabled(obj.IsAdditionEnabled, phase);
                        this.Update_EnterTappedCommand(obj.EnterTappedCommand, phase);
                        this.Update_txtNumberEntered(obj.txtNumberEntered, phase);
                        this.Update_IsDecimalValueAllowed(obj.IsDecimalValueAllowed, phase);
                    }
                }
            }
            private void Update_Text(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Infonet_CStoreCommander_UI_Controls_SecondFrameHeading_Text(this.obj3, obj, null);
                }
            }
            private void Update_BackArrowVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Infonet_CStoreCommander_UI_Controls_SecondFrameHeading_BackArrowVisibility(this.obj3, obj);
                }
            }
            private void Update_BackNavigation(global::System.Windows.Input.ICommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Infonet_CStoreCommander_UI_Controls_SecondFrameHeading_PreviousFrame(this.obj3, obj, null);
                }
            }
            private void Update_IsDollarVisible(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, obj);
                }
            }
            private void Update_CashButtonItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                }
            }
            private void Update_IsSubtractionEnabled(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj6, obj);
                }
            }
            private void Update_NumberpadVM(global::Infonet.CStoreCommander.UI.ViewModel.Common.NumberpadVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_NumberpadVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NumberpadVM_MinusTappedCommand(obj.MinusTappedCommand, phase);
                        this.Update_NumberpadVM_NumberTappedCommand(obj.NumberTappedCommand, phase);
                        this.Update_NumberpadVM_BackSapceCommand(obj.BackSapceCommand, phase);
                        this.Update_NumberpadVM_InputText(obj.InputText, phase);
                    }
                }
            }
            private void Update_NumberpadVM_MinusTappedCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj6, obj, null);
                }
            }
            private void Update_IsAdditionEnabled(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj7, obj);
                }
            }
            private void Update_NumberpadVM_NumberTappedCommand(global::GalaSoft.MvvmLight.Command.RelayCommand<global::System.Object> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj7, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj9, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj10, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj11, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj12, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj13, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj14, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj15, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj16, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj17, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj18, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj19, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj20, obj, null);
                }
            }
            private void Update_EnterTappedCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj8, obj, null);
                }
            }
            private void Update_txtNumberEntered(global::Windows.UI.Xaml.Controls.TextBlock obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_txtNumberEntered(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_txtNumberEntered_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_txtNumberEntered_Text(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj8, obj, null);
                }
            }
            private void Update_IsDecimalValueAllowed(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj11, obj);
                }
            }
            private void Update_NumberpadVM_BackSapceCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj21, obj, null);
                }
            }
            private void Update_NumberpadVM_InputText(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj22, obj, null);
                }
            }

            private class NumberPad_obj1_BindingsTracking
            {
                global::System.WeakReference<NumberPad_obj1_Bindings> WeakRefToBindingObj; 

                public NumberPad_obj1_BindingsTracking(NumberPad_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<NumberPad_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_NumberpadVM(null);
                    UpdateChildListeners_txtNumberEntered(null);
                }

                public void DependencyPropertyChanged_Text(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_Text(obj.Text, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_BackArrowVisibility(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_BackArrowVisibility(obj.BackArrowVisibility, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_BackNavigation(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_BackNavigation(obj.BackNavigation, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_IsDollarVisible(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_IsDollarVisible(obj.IsDollarVisible, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_CashButtonItemSource(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_CashButtonItemSource(obj.CashButtonItemSource, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_IsSubtractionEnabled(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_IsSubtractionEnabled(obj.IsSubtractionEnabled, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_IsAdditionEnabled(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_IsAdditionEnabled(obj.IsAdditionEnabled, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_EnterTappedCommand(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_EnterTappedCommand(obj.EnterTappedCommand, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_IsDecimalValueAllowed(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Infonet.CStoreCommander.UI.Controls.NumberPad obj = sender as global::Infonet.CStoreCommander.UI.Controls.NumberPad;
        if (obj != null)
        {
            bindings.Update_IsDecimalValueAllowed(obj.IsDecimalValueAllowed, DATA_CHANGED);
        }
                    }
                }
                private long tokenDPC_Text = 0;
                private long tokenDPC_BackArrowVisibility = 0;
                private long tokenDPC_BackNavigation = 0;
                private long tokenDPC_IsDollarVisible = 0;
                private long tokenDPC_CashButtonItemSource = 0;
                private long tokenDPC_IsSubtractionEnabled = 0;
                private long tokenDPC_IsAdditionEnabled = 0;
                private long tokenDPC_EnterTappedCommand = 0;
                private long tokenDPC_IsDecimalValueAllowed = 0;
                public void UpdateChildListeners_(global::Infonet.CStoreCommander.UI.Controls.NumberPad obj)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.TextProperty, tokenDPC_Text);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.BackArrowVisibilityProperty, tokenDPC_BackArrowVisibility);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.BackNavigationProperty, tokenDPC_BackNavigation);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.IsDollarVisibleProperty, tokenDPC_IsDollarVisible);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.CashButtonItemSourceProperty, tokenDPC_CashButtonItemSource);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.IsSubtractionEnabledProperty, tokenDPC_IsSubtractionEnabled);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.IsAdditionEnabledProperty, tokenDPC_IsAdditionEnabled);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.EnterTappedCommandProperty, tokenDPC_EnterTappedCommand);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.IsDecimalValueAllowedProperty, tokenDPC_IsDecimalValueAllowed);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_Text = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.TextProperty, DependencyPropertyChanged_Text);
                            tokenDPC_BackArrowVisibility = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.BackArrowVisibilityProperty, DependencyPropertyChanged_BackArrowVisibility);
                            tokenDPC_BackNavigation = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.BackNavigationProperty, DependencyPropertyChanged_BackNavigation);
                            tokenDPC_IsDollarVisible = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.IsDollarVisibleProperty, DependencyPropertyChanged_IsDollarVisible);
                            tokenDPC_CashButtonItemSource = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.CashButtonItemSourceProperty, DependencyPropertyChanged_CashButtonItemSource);
                            tokenDPC_IsSubtractionEnabled = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.IsSubtractionEnabledProperty, DependencyPropertyChanged_IsSubtractionEnabled);
                            tokenDPC_IsAdditionEnabled = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.IsAdditionEnabledProperty, DependencyPropertyChanged_IsAdditionEnabled);
                            tokenDPC_EnterTappedCommand = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.EnterTappedCommandProperty, DependencyPropertyChanged_EnterTappedCommand);
                            tokenDPC_IsDecimalValueAllowed = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.NumberPad.IsDecimalValueAllowedProperty, DependencyPropertyChanged_IsDecimalValueAllowed);
                        }
                    }
                }
                public void PropertyChanged_CashButtonItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_CashButtonItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel>;
                    }
                }
                public void PropertyChanged_NumberpadVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.Common.NumberpadVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.Common.NumberpadVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_NumberpadVM_MinusTappedCommand(obj.MinusTappedCommand, DATA_CHANGED);
                                    bindings.Update_NumberpadVM_NumberTappedCommand(obj.NumberTappedCommand, DATA_CHANGED);
                                    bindings.Update_NumberpadVM_BackSapceCommand(obj.BackSapceCommand, DATA_CHANGED);
                                    bindings.Update_NumberpadVM_InputText(obj.InputText, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "MinusTappedCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NumberpadVM_MinusTappedCommand(obj.MinusTappedCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NumberTappedCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NumberpadVM_NumberTappedCommand(obj.NumberTappedCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "BackSapceCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NumberpadVM_BackSapceCommand(obj.BackSapceCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "InputText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NumberpadVM_InputText(obj.InputText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.Common.NumberpadVM cache_NumberpadVM = null;
                public void UpdateChildListeners_NumberpadVM(global::Infonet.CStoreCommander.UI.ViewModel.Common.NumberpadVM obj)
                {
                    if (obj != cache_NumberpadVM)
                    {
                        if (cache_NumberpadVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_NumberpadVM).PropertyChanged -= PropertyChanged_NumberpadVM;
                            cache_NumberpadVM = null;
                        }
                        if (obj != null)
                        {
                            cache_NumberpadVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_NumberpadVM;
                        }
                    }
                }
                public void DependencyPropertyChanged_txtNumberEntered_Text(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    NumberPad_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.TextBlock obj = sender as global::Windows.UI.Xaml.Controls.TextBlock;
        if (obj != null)
        {
            bindings.Update_txtNumberEntered_Text(obj.Text, DATA_CHANGED);
        }
                    }
                }
                private global::Windows.UI.Xaml.Controls.TextBlock cache_txtNumberEntered = null;
                private long tokenDPC_txtNumberEntered_Text = 0;
                public void UpdateChildListeners_txtNumberEntered(global::Windows.UI.Xaml.Controls.TextBlock obj)
                {
                    if (obj != cache_txtNumberEntered)
                    {
                        if (cache_txtNumberEntered != null)
                        {
                            cache_txtNumberEntered.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty, tokenDPC_txtNumberEntered_Text);
                            cache_txtNumberEntered = null;
                        }
                        if (obj != null)
                        {
                            cache_txtNumberEntered = obj;
                            tokenDPC_txtNumberEntered_Text = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty, DependencyPropertyChanged_txtNumberEntered_Text);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.RootGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 22:
                {
                    this.txtNumberEntered = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    NumberPad_obj1_Bindings bindings = new NumberPad_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 5:
                {
                    global::Infonet.CStoreCommander.ControlLib.GenericButton element5 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                    NumberPad_obj5_Bindings bindings = new NumberPad_obj5_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::Infonet.CStoreCommander.UI.Model.Cash.CashButtonModel) element5.DataContext);
                    element5.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element5, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

