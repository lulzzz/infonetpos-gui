#pragma checksum "C:\Infonet_final\InfonetUI-UWP_Dev\Infonet.CStoreCommander.UI\View\PSInet\PSInetOptions\Refund.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "580EF37DFE0CDCDBE7D6FA4893D478EE"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.View.PSInet.PSInetOptions
{
    partial class Refund : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_MyToolkit_Controls_DataGrid_ItemsSource(global::MyToolkit.Controls.DataGrid obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_MyToolkit_Controls_DataGrid_SelectedItem(global::MyToolkit.Controls.DataGrid obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        private class Refund_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IRefund_Bindings
        {
            private global::Infonet.CStoreCommander.UI.View.PSInet.PSInetOptions.Refund dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::MyToolkit.Controls.DataGrid obj2;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj3;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj5;

            private Refund_obj1_BindingsTracking bindingsTracking;

            public Refund_obj1_Bindings()
            {
                this.bindingsTracking = new Refund_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2:
                        this.obj2 = (global::MyToolkit.Controls.DataGrid)target;
                        (this.obj2).RegisterPropertyChangedCallback(global::MyToolkit.Controls.DataGrid.SelectedItemProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.PYSVM.SelectedPSTransaction = (global::Infonet.CStoreCommander.EntityLayer.Entities.PaymentSource.PSTransaction)this.LookupConverter("NothingConverter").ConvertBack((this.obj2).SelectedItem, typeof(global::Infonet.CStoreCommander.EntityLayer.Entities.PaymentSource.PSTransaction), null, null);
                                }
                            });
                        break;
                    case 3:
                        this.obj3 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 5:
                        this.obj5 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    default:
                        break;
                }
            }

            // IRefund_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Refund_obj1_Bindings

            public void SetDataRoot(global::Infonet.CStoreCommander.UI.View.PSInet.PSInetOptions.Refund newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.View.PSInet.PSInetOptions.Refund obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PYSVM(obj.PYSVM, phase);
                    }
                }
            }
            private void Update_PYSVM(global::Infonet.CStoreCommander.UI.ViewModel.PSInet.PaymentSourceVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PYSVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PYSVM_PSTransactions(obj.PSTransactions, phase);
                        this.Update_PYSVM_SelectedPSTransaction(obj.SelectedPSTransaction, phase);
                        this.Update_PYSVM_QueryCommand(obj.QueryCommand, phase);
                        this.Update_PYSVM_RefundCommand(obj.RefundCommand, phase);
                    }
                }
            }
            private void Update_PYSVM_PSTransactions(global::System.Collections.Generic.List<global::Infonet.CStoreCommander.EntityLayer.Entities.PaymentSource.PSTransaction> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_MyToolkit_Controls_DataGrid_ItemsSource(this.obj2, obj, null);
                }
            }
            private void Update_PYSVM_SelectedPSTransaction(global::Infonet.CStoreCommander.EntityLayer.Entities.PaymentSource.PSTransaction obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_MyToolkit_Controls_DataGrid_SelectedItem(this.obj2, (global::System.Object)this.LookupConverter("NothingConverter").Convert(obj, typeof(global::System.Object), null, null), null);
                }
            }
            private void Update_PYSVM_QueryCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj3, obj, null);
                }
            }
            private void Update_PYSVM_RefundCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj5, obj, null);
                }
            }

            private class Refund_obj1_BindingsTracking
            {
                global::System.WeakReference<Refund_obj1_Bindings> WeakRefToBindingObj; 

                public Refund_obj1_BindingsTracking(Refund_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Refund_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_PYSVM(null);
                }

                public void PropertyChanged_PYSVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Refund_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.PSInet.PaymentSourceVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.PSInet.PaymentSourceVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_PYSVM_PSTransactions(obj.PSTransactions, DATA_CHANGED);
                                    bindings.Update_PYSVM_SelectedPSTransaction(obj.SelectedPSTransaction, DATA_CHANGED);
                                    bindings.Update_PYSVM_QueryCommand(obj.QueryCommand, DATA_CHANGED);
                                    bindings.Update_PYSVM_RefundCommand(obj.RefundCommand, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "PSTransactions":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PYSVM_PSTransactions(obj.PSTransactions, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedPSTransaction":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PYSVM_SelectedPSTransaction(obj.SelectedPSTransaction, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "QueryCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PYSVM_QueryCommand(obj.QueryCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RefundCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PYSVM_RefundCommand(obj.RefundCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.PSInet.PaymentSourceVM cache_PYSVM = null;
                public void UpdateChildListeners_PYSVM(global::Infonet.CStoreCommander.UI.ViewModel.PSInet.PaymentSourceVM obj)
                {
                    if (obj != cache_PYSVM)
                    {
                        if (cache_PYSVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PYSVM).PropertyChanged -= PropertyChanged_PYSVM;
                            cache_PYSVM = null;
                        }
                        if (obj != null)
                        {
                            cache_PYSVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PYSVM;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    global::MyToolkit.Controls.DataGrid element2 = (global::MyToolkit.Controls.DataGrid)(target);
                    #line 141 "..\..\..\..\..\View\PSInet\PSInetOptions\Refund.xaml"
                    ((global::MyToolkit.Controls.DataGrid)element2).SelectionChanged += this.DataGrid_SelectionChanged;
                    #line default
                }
                break;
            case 4:
                {
                    this.TransID = (global::MyToolkit.Extended.Controls.CustomTextBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    Refund_obj1_Bindings bindings = new Refund_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

