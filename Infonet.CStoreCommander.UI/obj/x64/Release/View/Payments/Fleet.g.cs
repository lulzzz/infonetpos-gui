#pragma checksum "C:\Infonet_final\InfonetUI-UWP_Dev\Infonet.CStoreCommander.UI\View\Payments\Fleet.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "9554688E341BF805499983F0E12E6A47"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.View.Payments
{
    partial class Fleet : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_WinRT_Triggers_InvokeCommandAction_Command(global::WinRT.Triggers.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        private class Fleet_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IFleet_Bindings
        {
            private global::Infonet.CStoreCommander.UI.View.Payments.Fleet dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::MyToolkit.Extended.Controls.CustomTextBox obj5;
            private global::WinRT.Triggers.InvokeCommandAction obj7;

            private Fleet_obj1_BindingsTracking bindingsTracking;

            public Fleet_obj1_Bindings()
            {
                this.bindingsTracking = new Fleet_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5:
                        this.obj5 = (global::MyToolkit.Extended.Controls.CustomTextBox)target;
                        ((global::MyToolkit.Extended.Controls.CustomTextBox)target).KeyUp += (global::System.Object param0, global::Windows.UI.Xaml.Input.KeyRoutedEventArgs param1) =>
                        {
                        this.dataRoot.CardNumberKeyUp(param0, param1);
                        };
                        break;
                    case 7:
                        this.obj7 = (global::WinRT.Triggers.InvokeCommandAction)target;
                        break;
                    default:
                        break;
                }
            }

            // IFleet_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Fleet_obj1_Bindings

            public void SetDataRoot(global::Infonet.CStoreCommander.UI.View.Payments.Fleet newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.View.Payments.Fleet obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FleetVM(obj.FleetVM, phase);
                    }
                }
            }
            private void Update_FleetVM(global::Infonet.CStoreCommander.UI.ViewModel.Payment.FleetVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_FleetVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FleetVM_IsAcceptButtonEnabled(obj.IsAcceptButtonEnabled, phase);
                        this.Update_FleetVM_AcceptPaymentCommand(obj.AcceptPaymentCommand, phase);
                        this.Update_FleetVM_Heading(obj.Heading, phase);
                        this.Update_FleetVM_EnterPressedOnAmountCommand(obj.EnterPressedOnAmountCommand, phase);
                    }
                }
            }
            private void Update_FleetVM_IsAcceptButtonEnabled(global::System.Boolean obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj3, obj);
                }
            }
            private void Update_FleetVM_AcceptPaymentCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj3, obj, null);
                }
            }
            private void Update_FleetVM_Heading(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                }
            }
            private void Update_FleetVM_EnterPressedOnAmountCommand(global::GalaSoft.MvvmLight.Command.RelayCommand<global::System.Object> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_WinRT_Triggers_InvokeCommandAction_Command(this.obj7, obj, null);
                }
            }

            private class Fleet_obj1_BindingsTracking
            {
                global::System.WeakReference<Fleet_obj1_Bindings> WeakRefToBindingObj; 

                public Fleet_obj1_BindingsTracking(Fleet_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Fleet_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_FleetVM(null);
                }

                public void PropertyChanged_FleetVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Fleet_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.Payment.FleetVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.Payment.FleetVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_FleetVM_IsAcceptButtonEnabled(obj.IsAcceptButtonEnabled, DATA_CHANGED);
                                    bindings.Update_FleetVM_AcceptPaymentCommand(obj.AcceptPaymentCommand, DATA_CHANGED);
                                    bindings.Update_FleetVM_Heading(obj.Heading, DATA_CHANGED);
                                    bindings.Update_FleetVM_EnterPressedOnAmountCommand(obj.EnterPressedOnAmountCommand, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsAcceptButtonEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FleetVM_IsAcceptButtonEnabled(obj.IsAcceptButtonEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AcceptPaymentCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FleetVM_AcceptPaymentCommand(obj.AcceptPaymentCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Heading":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FleetVM_Heading(obj.Heading, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EnterPressedOnAmountCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FleetVM_EnterPressedOnAmountCommand(obj.EnterPressedOnAmountCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.Payment.FleetVM cache_FleetVM = null;
                public void UpdateChildListeners_FleetVM(global::Infonet.CStoreCommander.UI.ViewModel.Payment.FleetVM obj)
                {
                    if (obj != cache_FleetVM)
                    {
                        if (cache_FleetVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_FleetVM).PropertyChanged -= PropertyChanged_FleetVM;
                            cache_FleetVM = null;
                        }
                        if (obj != null)
                        {
                            cache_FleetVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_FleetVM;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    global::Windows.UI.Xaml.Controls.Grid element2 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    #line 12 "..\..\..\..\View\Payments\Fleet.xaml"
                    ((global::Windows.UI.Xaml.Controls.Grid)element2).Loaded += this.GridLoaded;
                    #line default
                }
                break;
            case 5:
                {
                    this.txtCardNumber = (global::MyToolkit.Extended.Controls.CustomTextBox)(target);
                }
                break;
            case 6:
                {
                    this.txtAmountFleet = (global::MyToolkit.Extended.Controls.CustomTextBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    Fleet_obj1_Bindings bindings = new Fleet_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

