#pragma checksum "F:\infonetpos\infonetpos-gui\Infonet.CStoreCommander.UI\Controls\CheckoutOptions.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "A846A74388F68FA3E90FD410002DC65E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.Controls
{
    partial class CheckoutOptions : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Infonet_CStoreCommander_UI_Controls_SmallPopupHeader_CancelCommand(global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CheckoutOptions_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICheckoutOptions_Bindings
        {
            private global::Infonet.CStoreCommander.UI.Controls.CheckoutOptions dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader obj2;
            private global::Windows.UI.Xaml.Controls.StackPanel obj3;
            private global::Windows.UI.Xaml.Controls.StackPanel obj4;
            private global::Windows.UI.Xaml.Controls.StackPanel obj5;
            private global::Windows.UI.Xaml.Controls.StackPanel obj6;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj7;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj8;
            private global::Windows.UI.Xaml.Controls.StackPanel obj9;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj10;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj11;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj12;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj13;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj14;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj15;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj16;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj17;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2CancelCommandDisabled = false;
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj4VisibilityDisabled = false;
            private static bool isobj5VisibilityDisabled = false;
            private static bool isobj6VisibilityDisabled = false;
            private static bool isobj7CommandDisabled = false;
            private static bool isobj8CommandDisabled = false;
            private static bool isobj8ContentDisabled = false;
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj10CommandDisabled = false;
            private static bool isobj11CommandDisabled = false;
            private static bool isobj12CommandDisabled = false;
            private static bool isobj13IsEnabledDisabled = false;
            private static bool isobj13CommandDisabled = false;
            private static bool isobj14IsEnabledDisabled = false;
            private static bool isobj14CommandDisabled = false;
            private static bool isobj15IsEnabledDisabled = false;
            private static bool isobj15CommandDisabled = false;
            private static bool isobj16IsEnabledDisabled = false;
            private static bool isobj16CommandDisabled = false;
            private static bool isobj17CommandDisabled = false;

            private CheckoutOptions_obj1_BindingsTracking bindingsTracking;

            public CheckoutOptions_obj1_Bindings()
            {
                this.bindingsTracking = new CheckoutOptions_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 54 && columnNumber == 41)
                {
                    isobj2CancelCommandDisabled = true;
                }
                else if (lineNumber == 96 && columnNumber == 33)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 33)
                {
                    isobj4VisibilityDisabled = true;
                }
                else if (lineNumber == 114 && columnNumber == 33)
                {
                    isobj5VisibilityDisabled = true;
                }
                else if (lineNumber == 123 && columnNumber == 33)
                {
                    isobj6VisibilityDisabled = true;
                }
                else if (lineNumber == 127 && columnNumber == 51)
                {
                    isobj7CommandDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 51)
                {
                    isobj8CommandDisabled = true;
                }
                else if (lineNumber == 119 && columnNumber == 51)
                {
                    isobj8ContentDisabled = true;
                }
                else if (lineNumber == 107 && columnNumber == 37)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 109 && columnNumber == 51)
                {
                    isobj10CommandDisabled = true;
                }
                else if (lineNumber == 100 && columnNumber == 51)
                {
                    isobj11CommandDisabled = true;
                }
                else if (lineNumber == 81 && columnNumber == 51)
                {
                    isobj12CommandDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 51)
                {
                    isobj13IsEnabledDisabled = true;
                }
                else if (lineNumber == 87 && columnNumber == 51)
                {
                    isobj13CommandDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 51)
                {
                    isobj14IsEnabledDisabled = true;
                }
                else if (lineNumber == 91 && columnNumber == 51)
                {
                    isobj14CommandDisabled = true;
                }
                else if (lineNumber == 63 && columnNumber == 51)
                {
                    isobj15IsEnabledDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 51)
                {
                    isobj15CommandDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 51)
                {
                    isobj16IsEnabledDisabled = true;
                }
                else if (lineNumber == 71 && columnNumber == 51)
                {
                    isobj16CommandDisabled = true;
                }
                else if (lineNumber == 74 && columnNumber == 51)
                {
                    isobj17CommandDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Controls\CheckoutOptions.xaml line 53
                        this.obj2 = (global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader)target;
                        break;
                    case 3: // Controls\CheckoutOptions.xaml line 95
                        this.obj3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 4: // Controls\CheckoutOptions.xaml line 104
                        this.obj4 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 5: // Controls\CheckoutOptions.xaml line 113
                        this.obj5 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 6: // Controls\CheckoutOptions.xaml line 122
                        this.obj6 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 7: // Controls\CheckoutOptions.xaml line 126
                        this.obj7 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 8: // Controls\CheckoutOptions.xaml line 117
                        this.obj8 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 9: // Controls\CheckoutOptions.xaml line 107
                        this.obj9 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 10: // Controls\CheckoutOptions.xaml line 108
                        this.obj10 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 11: // Controls\CheckoutOptions.xaml line 99
                        this.obj11 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 12: // Controls\CheckoutOptions.xaml line 80
                        this.obj12 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 13: // Controls\CheckoutOptions.xaml line 84
                        this.obj13 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 14: // Controls\CheckoutOptions.xaml line 89
                        this.obj14 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 15: // Controls\CheckoutOptions.xaml line 63
                        this.obj15 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 16: // Controls\CheckoutOptions.xaml line 68
                        this.obj16 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 17: // Controls\CheckoutOptions.xaml line 74
                        this.obj17 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ICheckoutOptions_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Infonet.CStoreCommander.UI.Controls.CheckoutOptions)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.Controls.CheckoutOptions obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SaleGridVM(obj.SaleGridVM, phase);
                    }
                }
            }
            private void Update_SaleGridVM(global::Infonet.CStoreCommander.UI.ViewModel.Sale.SaleGridVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SaleGridVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SaleGridVM_CloseCheckoutOptionsPopupCommand(obj.CloseCheckoutOptionsPopupCommand, phase);
                        this.Update_SaleGridVM_SupportKickBack(obj.SupportKickBack, phase);
                        this.Update_SaleGridVM_IsCarwashSupported(obj.IsCarwashSupported, phase);
                        this.Update_SaleGridVM_ISPSInetSupported(obj.ISPSInetSupported, phase);
                        this.Update_SaleGridVM_REWARDS_Enabled(obj.REWARDS_Enabled, phase);
                        this.Update_SaleGridVM_AckrooCommand(obj.AckrooCommand, phase);
                        this.Update_SaleGridVM_PSInetCommand(obj.PSInetCommand, phase);
                        this.Update_SaleGridVM_PSINet_Type(obj.PSINet_Type, phase);
                        this.Update_SaleGridVM_IsCarwashIntegrated(obj.IsCarwashIntegrated, phase);
                        this.Update_SaleGridVM_OpenCarwashPopupCommand(obj.OpenCarwashPopupCommand, phase);
                        this.Update_SaleGridVM_OpenKickbackBalancePopupCommand(obj.OpenKickbackBalancePopupCommand, phase);
                        this.Update_SaleGridVM_RaiseCashPopupCommand(obj.RaiseCashPopupCommand, phase);
                        this.Update_SaleGridVM_IsMessageInputEnable(obj.IsMessageInputEnable, phase);
                        this.Update_SaleGridVM_RaiseMessagePopupCommand(obj.RaiseMessagePopupCommand, phase);
                        this.Update_SaleGridVM_IsWriteOffEnabled(obj.IsWriteOffEnabled, phase);
                        this.Update_SaleGridVM_WriteOffCommand(obj.WriteOffCommand, phase);
                        this.Update_SaleGridVM_OperatorCanSuspendSale(obj.OperatorCanSuspendSale, phase);
                        this.Update_SaleGridVM_SuspendSaleCommand(obj.SuspendSaleCommand, phase);
                        this.Update_SaleGridVM_OperatorCanUnsuspendSales(obj.OperatorCanUnsuspendSales, phase);
                        this.Update_SaleGridVM_OpenSuspendedSalesCommand(obj.OpenSuspendedSalesCommand, phase);
                        this.Update_SaleGridVM_OpenReturnsPopupCommand(obj.OpenReturnsPopupCommand, phase);
                    }
                }
            }
            private void Update_SaleGridVM_CloseCheckoutOptionsPopupCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 53
                    if (!isobj2CancelCommandDisabled)
                    {
                        XamlBindingSetters.Set_Infonet_CStoreCommander_UI_Controls_SmallPopupHeader_CancelCommand(this.obj2, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_SupportKickBack(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 95
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_SaleGridVM_IsCarwashSupported(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 104
                    if (!isobj4VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_SaleGridVM_ISPSInetSupported(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 113
                    if (!isobj5VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj5, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_SaleGridVM_REWARDS_Enabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 122
                    if (!isobj6VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj6, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_SaleGridVM_AckrooCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 126
                    if (!isobj7CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj7, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_PSInetCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 117
                    if (!isobj8CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj8, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_PSINet_Type(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 117
                    if (!isobj8ContentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj8, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_IsCarwashIntegrated(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 107
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_SaleGridVM_OpenCarwashPopupCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 108
                    if (!isobj10CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj10, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_OpenKickbackBalancePopupCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 99
                    if (!isobj11CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj11, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_RaiseCashPopupCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 80
                    if (!isobj12CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj12, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_IsMessageInputEnable(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 84
                    if (!isobj13IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj13, obj);
                    }
                }
            }
            private void Update_SaleGridVM_RaiseMessagePopupCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 84
                    if (!isobj13CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj13, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_IsWriteOffEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 89
                    if (!isobj14IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj14, obj);
                    }
                }
            }
            private void Update_SaleGridVM_WriteOffCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 89
                    if (!isobj14CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj14, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_OperatorCanSuspendSale(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 63
                    if (!isobj15IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj15, obj);
                    }
                }
            }
            private void Update_SaleGridVM_SuspendSaleCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 63
                    if (!isobj15CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj15, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_OperatorCanUnsuspendSales(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 68
                    if (!isobj16IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj16, obj);
                    }
                }
            }
            private void Update_SaleGridVM_OpenSuspendedSalesCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 68
                    if (!isobj16CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj16, obj, null);
                    }
                }
            }
            private void Update_SaleGridVM_OpenReturnsPopupCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\CheckoutOptions.xaml line 74
                    if (!isobj17CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj17, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class CheckoutOptions_obj1_BindingsTracking
            {
                private global::System.WeakReference<CheckoutOptions_obj1_Bindings> weakRefToBindingObj; 

                public CheckoutOptions_obj1_BindingsTracking(CheckoutOptions_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<CheckoutOptions_obj1_Bindings>(obj);
                }

                public CheckoutOptions_obj1_Bindings TryGetBindingObject()
                {
                    CheckoutOptions_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_SaleGridVM(null);
                }

                public void PropertyChanged_SaleGridVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CheckoutOptions_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.Sale.SaleGridVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.Sale.SaleGridVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SaleGridVM_CloseCheckoutOptionsPopupCommand(obj.CloseCheckoutOptionsPopupCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_SupportKickBack(obj.SupportKickBack, DATA_CHANGED);
                                bindings.Update_SaleGridVM_IsCarwashSupported(obj.IsCarwashSupported, DATA_CHANGED);
                                bindings.Update_SaleGridVM_ISPSInetSupported(obj.ISPSInetSupported, DATA_CHANGED);
                                bindings.Update_SaleGridVM_REWARDS_Enabled(obj.REWARDS_Enabled, DATA_CHANGED);
                                bindings.Update_SaleGridVM_AckrooCommand(obj.AckrooCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_PSInetCommand(obj.PSInetCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_PSINet_Type(obj.PSINet_Type, DATA_CHANGED);
                                bindings.Update_SaleGridVM_IsCarwashIntegrated(obj.IsCarwashIntegrated, DATA_CHANGED);
                                bindings.Update_SaleGridVM_OpenCarwashPopupCommand(obj.OpenCarwashPopupCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_OpenKickbackBalancePopupCommand(obj.OpenKickbackBalancePopupCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_RaiseCashPopupCommand(obj.RaiseCashPopupCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_IsMessageInputEnable(obj.IsMessageInputEnable, DATA_CHANGED);
                                bindings.Update_SaleGridVM_RaiseMessagePopupCommand(obj.RaiseMessagePopupCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_IsWriteOffEnabled(obj.IsWriteOffEnabled, DATA_CHANGED);
                                bindings.Update_SaleGridVM_WriteOffCommand(obj.WriteOffCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_OperatorCanSuspendSale(obj.OperatorCanSuspendSale, DATA_CHANGED);
                                bindings.Update_SaleGridVM_SuspendSaleCommand(obj.SuspendSaleCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_OperatorCanUnsuspendSales(obj.OperatorCanUnsuspendSales, DATA_CHANGED);
                                bindings.Update_SaleGridVM_OpenSuspendedSalesCommand(obj.OpenSuspendedSalesCommand, DATA_CHANGED);
                                bindings.Update_SaleGridVM_OpenReturnsPopupCommand(obj.OpenReturnsPopupCommand, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CloseCheckoutOptionsPopupCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_CloseCheckoutOptionsPopupCommand(obj.CloseCheckoutOptionsPopupCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SupportKickBack":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_SupportKickBack(obj.SupportKickBack, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsCarwashSupported":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_IsCarwashSupported(obj.IsCarwashSupported, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ISPSInetSupported":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_ISPSInetSupported(obj.ISPSInetSupported, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "REWARDS_Enabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_REWARDS_Enabled(obj.REWARDS_Enabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AckrooCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_AckrooCommand(obj.AckrooCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PSInetCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_PSInetCommand(obj.PSInetCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PSINet_Type":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_PSINet_Type(obj.PSINet_Type, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsCarwashIntegrated":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_IsCarwashIntegrated(obj.IsCarwashIntegrated, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OpenCarwashPopupCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_OpenCarwashPopupCommand(obj.OpenCarwashPopupCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OpenKickbackBalancePopupCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_OpenKickbackBalancePopupCommand(obj.OpenKickbackBalancePopupCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RaiseCashPopupCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_RaiseCashPopupCommand(obj.RaiseCashPopupCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsMessageInputEnable":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_IsMessageInputEnable(obj.IsMessageInputEnable, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RaiseMessagePopupCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_RaiseMessagePopupCommand(obj.RaiseMessagePopupCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsWriteOffEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_IsWriteOffEnabled(obj.IsWriteOffEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "WriteOffCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_WriteOffCommand(obj.WriteOffCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OperatorCanSuspendSale":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_OperatorCanSuspendSale(obj.OperatorCanSuspendSale, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SuspendSaleCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_SuspendSaleCommand(obj.SuspendSaleCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OperatorCanUnsuspendSales":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_OperatorCanUnsuspendSales(obj.OperatorCanUnsuspendSales, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OpenSuspendedSalesCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_OpenSuspendedSalesCommand(obj.OpenSuspendedSalesCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OpenReturnsPopupCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaleGridVM_OpenReturnsPopupCommand(obj.OpenReturnsPopupCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.Sale.SaleGridVM cache_SaleGridVM = null;
                public void UpdateChildListeners_SaleGridVM(global::Infonet.CStoreCommander.UI.ViewModel.Sale.SaleGridVM obj)
                {
                    if (obj != cache_SaleGridVM)
                    {
                        if (cache_SaleGridVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SaleGridVM).PropertyChanged -= PropertyChanged_SaleGridVM;
                            cache_SaleGridVM = null;
                        }
                        if (obj != null)
                        {
                            cache_SaleGridVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SaleGridVM;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\CheckoutOptions.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    CheckoutOptions_obj1_Bindings bindings = new CheckoutOptions_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

