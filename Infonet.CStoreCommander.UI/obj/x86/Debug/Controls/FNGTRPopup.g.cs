#pragma checksum "F:\infonetpos\infonetpos-gui\Infonet.CStoreCommander.UI\Controls\FNGTRPopup.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "B266947D5D38FD67EC5A961FEE1D3695"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.Controls
{
    partial class FNGTRPopup : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Border_Background(global::Windows.UI.Xaml.Controls.Border obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Infonet_CStoreCommander_UI_Controls_SmallPopupHeader_CancelCommand(global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_WinRT_Triggers_InvokeCommandAction_Command(global::WinRT.Triggers.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class FNGTRPopup_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IFNGTRPopup_Bindings
        {
            private global::Infonet.CStoreCommander.UI.Controls.FNGTRPopup dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj2;
            private global::Windows.UI.Xaml.Controls.Border obj3;
            private global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader obj4;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj5;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::WinRT.Triggers.InvokeCommandAction obj9;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj2Loaded;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3BackgroundDisabled = false;
            private static bool isobj4CancelCommandDisabled = false;
            private static bool isobj5CommandDisabled = false;
            private static bool isobj6CommandDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj9CommandDisabled = false;

            private FNGTRPopup_obj1_BindingsTracking bindingsTracking;

            public FNGTRPopup_obj1_Bindings()
            {
                this.bindingsTracking = new FNGTRPopup_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 12 && columnNumber == 11)
                {
                    this.obj2.Loaded -= obj2Loaded;
                }
                else if (lineNumber == 16 && columnNumber == 17)
                {
                    isobj3BackgroundDisabled = true;
                }
                else if (lineNumber == 36 && columnNumber == 41)
                {
                    isobj4CancelCommandDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 51)
                {
                    isobj5CommandDisabled = true;
                }
                else if (lineNumber == 92 && columnNumber == 51)
                {
                    isobj6CommandDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 36)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 67)
                {
                    isobj9CommandDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Controls\FNGTRPopup.xaml line 12
                        this.obj2 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.obj2Loaded = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.GridLoaded(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Grid)target).Loaded += obj2Loaded;
                        break;
                    case 3: // Controls\FNGTRPopup.xaml line 14
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 4: // Controls\FNGTRPopup.xaml line 35
                        this.obj4 = (global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader)target;
                        break;
                    case 5: // Controls\FNGTRPopup.xaml line 80
                        this.obj5 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 6: // Controls\FNGTRPopup.xaml line 88
                        this.obj6 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 7: // Controls\FNGTRPopup.xaml line 51
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Controls\FNGTRPopup.xaml line 66
                        this.obj9 = (global::WinRT.Triggers.InvokeCommandAction)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IFNGTRPopup_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Infonet.CStoreCommander.UI.Controls.FNGTRPopup)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.Controls.FNGTRPopup obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_BackgroundOverlay(obj.BackgroundOverlay, phase);
                        this.Update_SiteVM(obj.SiteVM, phase);
                        this.Update_VMBase(obj.VMBase, phase);
                    }
                }
            }
            private void Update_BackgroundOverlay(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\FNGTRPopup.xaml line 14
                    if (!isobj3BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Border_Background(this.obj3, obj, null);
                    }
                }
            }
            private void Update_SiteVM(global::Infonet.CStoreCommander.UI.ViewModel.Checkout.SiteVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SiteVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SiteVM_GetSaleSummaryCommand(obj.GetSaleSummaryCommand, phase);
                        this.Update_SiteVM_PerformFngtrCommand(obj.PerformFngtrCommand, phase);
                        this.Update_SiteVM_EnterPressedOnPhoneNumberCommand(obj.EnterPressedOnPhoneNumberCommand, phase);
                    }
                }
            }
            private void Update_SiteVM_GetSaleSummaryCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\FNGTRPopup.xaml line 35
                    if (!isobj4CancelCommandDisabled)
                    {
                        XamlBindingSetters.Set_Infonet_CStoreCommander_UI_Controls_SmallPopupHeader_CancelCommand(this.obj4, obj, null);
                    }
                    // Controls\FNGTRPopup.xaml line 88
                    if (!isobj6CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj6, obj, null);
                    }
                }
            }
            private void Update_SiteVM_PerformFngtrCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\FNGTRPopup.xaml line 80
                    if (!isobj5CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj5, obj, null);
                    }
                }
            }
            private void Update_VMBase(global::Infonet.CStoreCommander.UI.ViewModel.VMBase obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_VMBase(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VMBase_PopupService(obj.PopupService, phase);
                    }
                }
            }
            private void Update_VMBase_PopupService(global::Infonet.CStoreCommander.UI.Utility.PopupService obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_VMBase_PopupService(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VMBase_PopupService_Title(obj.Title, phase);
                    }
                }
            }
            private void Update_VMBase_PopupService_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\FNGTRPopup.xaml line 51
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_SiteVM_EnterPressedOnPhoneNumberCommand(global::GalaSoft.MvvmLight.Command.RelayCommand<global::System.Object> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\FNGTRPopup.xaml line 66
                    if (!isobj9CommandDisabled)
                    {
                        XamlBindingSetters.Set_WinRT_Triggers_InvokeCommandAction_Command(this.obj9, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class FNGTRPopup_obj1_BindingsTracking
            {
                private global::System.WeakReference<FNGTRPopup_obj1_Bindings> weakRefToBindingObj; 

                public FNGTRPopup_obj1_BindingsTracking(FNGTRPopup_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<FNGTRPopup_obj1_Bindings>(obj);
                }

                public FNGTRPopup_obj1_Bindings TryGetBindingObject()
                {
                    FNGTRPopup_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_SiteVM(null);
                    UpdateChildListeners_VMBase(null);
                    UpdateChildListeners_VMBase_PopupService(null);
                }

                public void DependencyPropertyChanged_BackgroundOverlay(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    FNGTRPopup_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Infonet.CStoreCommander.UI.Controls.FNGTRPopup obj = sender as global::Infonet.CStoreCommander.UI.Controls.FNGTRPopup;
                        if (obj != null)
                        {
                            bindings.Update_BackgroundOverlay(obj.BackgroundOverlay, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_BackgroundOverlay = 0;
                public void UpdateChildListeners_(global::Infonet.CStoreCommander.UI.Controls.FNGTRPopup obj)
                {
                    FNGTRPopup_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.FNGTRPopup.BackgroundOverlayProperty, tokenDPC_BackgroundOverlay);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_BackgroundOverlay = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.FNGTRPopup.BackgroundOverlayProperty, DependencyPropertyChanged_BackgroundOverlay);
                        }
                    }
                }
                public void PropertyChanged_SiteVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FNGTRPopup_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.Checkout.SiteVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.Checkout.SiteVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SiteVM_GetSaleSummaryCommand(obj.GetSaleSummaryCommand, DATA_CHANGED);
                                bindings.Update_SiteVM_PerformFngtrCommand(obj.PerformFngtrCommand, DATA_CHANGED);
                                bindings.Update_SiteVM_EnterPressedOnPhoneNumberCommand(obj.EnterPressedOnPhoneNumberCommand, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "GetSaleSummaryCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SiteVM_GetSaleSummaryCommand(obj.GetSaleSummaryCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PerformFngtrCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SiteVM_PerformFngtrCommand(obj.PerformFngtrCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EnterPressedOnPhoneNumberCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SiteVM_EnterPressedOnPhoneNumberCommand(obj.EnterPressedOnPhoneNumberCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.Checkout.SiteVM cache_SiteVM = null;
                public void UpdateChildListeners_SiteVM(global::Infonet.CStoreCommander.UI.ViewModel.Checkout.SiteVM obj)
                {
                    if (obj != cache_SiteVM)
                    {
                        if (cache_SiteVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SiteVM).PropertyChanged -= PropertyChanged_SiteVM;
                            cache_SiteVM = null;
                        }
                        if (obj != null)
                        {
                            cache_SiteVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SiteVM;
                        }
                    }
                }
                public void PropertyChanged_VMBase(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FNGTRPopup_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.VMBase obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.VMBase;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_VMBase_PopupService(obj.PopupService, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "PopupService":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VMBase_PopupService(obj.PopupService, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.VMBase cache_VMBase = null;
                public void UpdateChildListeners_VMBase(global::Infonet.CStoreCommander.UI.ViewModel.VMBase obj)
                {
                    if (obj != cache_VMBase)
                    {
                        if (cache_VMBase != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_VMBase).PropertyChanged -= PropertyChanged_VMBase;
                            cache_VMBase = null;
                        }
                        if (obj != null)
                        {
                            cache_VMBase = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_VMBase;
                        }
                    }
                }
                public void PropertyChanged_VMBase_PopupService(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FNGTRPopup_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.Utility.PopupService obj = sender as global::Infonet.CStoreCommander.UI.Utility.PopupService;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_VMBase_PopupService_Title(obj.Title, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VMBase_PopupService_Title(obj.Title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.Utility.PopupService cache_VMBase_PopupService = null;
                public void UpdateChildListeners_VMBase_PopupService(global::Infonet.CStoreCommander.UI.Utility.PopupService obj)
                {
                    if (obj != cache_VMBase_PopupService)
                    {
                        if (cache_VMBase_PopupService != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_VMBase_PopupService).PropertyChanged -= PropertyChanged_VMBase_PopupService;
                            cache_VMBase_PopupService = null;
                        }
                        if (obj != null)
                        {
                            cache_VMBase_PopupService = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_VMBase_PopupService;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 4: // Controls\FNGTRPopup.xaml line 35
                {
                    this.TitleText = (global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader)(target);
                }
                break;
            case 8: // Controls\FNGTRPopup.xaml line 54
                {
                    this.pbText = (global::MyToolkit.Extended.Controls.CustomTextBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\FNGTRPopup.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    FNGTRPopup_obj1_Bindings bindings = new FNGTRPopup_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

