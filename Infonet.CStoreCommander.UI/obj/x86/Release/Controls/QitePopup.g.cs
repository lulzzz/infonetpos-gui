#pragma checksum "F:\Infonet_final\InfonetUI-UWP_Dev\Infonet.CStoreCommander.UI\Controls\QitePopup.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "23A7D8872601181234E8B1D799D9EB41"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.Controls
{
    partial class QitePopup : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Border_Background(global::Windows.UI.Xaml.Controls.Border obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Infonet_CStoreCommander_UI_Controls_SmallPopupHeader_CancelCommand(global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.CancelCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_MyToolkit_Extended_Controls_CustomTextBox_EnterPressedCommand(global::MyToolkit.Extended.Controls.CustomTextBox obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EnterPressedCommand = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class QitePopup_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IQitePopup_Bindings
        {
            private global::Infonet.CStoreCommander.UI.Controls.QitePopup dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj2;
            private global::Windows.UI.Xaml.Controls.Border obj3;
            private global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader obj4;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj5;
            private global::MyToolkit.Extended.Controls.CustomTextBox obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj2Loaded;

            private QitePopup_obj1_BindingsTracking bindingsTracking;

            public QitePopup_obj1_Bindings()
            {
                this.bindingsTracking = new QitePopup_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Controls\QitePopup.xaml line 18
                        this.obj2 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.obj2Loaded = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.GridLoaded(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Grid)target).Loaded += obj2Loaded;
                        break;
                    case 3: // Controls\QitePopup.xaml line 20
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 4: // Controls\QitePopup.xaml line 39
                        this.obj4 = (global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader)target;
                        break;
                    case 5: // Controls\QitePopup.xaml line 98
                        this.obj5 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 6: // Controls\QitePopup.xaml line 68
                        this.obj6 = (global::MyToolkit.Extended.Controls.CustomTextBox)target;
                        break;
                    case 7: // Controls\QitePopup.xaml line 78
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8: // Controls\QitePopup.xaml line 86
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IQitePopup_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Infonet.CStoreCommander.UI.Controls.QitePopup)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.Controls.QitePopup obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_BackgroundOverlay(obj.BackgroundOverlay, phase);
                        this.Update_QiteVM(obj.QiteVM, phase);
                    }
                }
            }
            private void Update_BackgroundOverlay(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\QitePopup.xaml line 20
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Border_Background(this.obj3, obj, null);
                }
            }
            private void Update_QiteVM(global::Infonet.CStoreCommander.UI.ViewModel.Checkout.QiteVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_QiteVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_QiteVM_ClosePopupCommand(obj.ClosePopupCommand, phase);
                        this.Update_QiteVM_IsSubmitQiteEnabled(obj.IsSubmitQiteEnabled, phase);
                        this.Update_QiteVM_ValidateQiteCommand(obj.ValidateQiteCommand, phase);
                        this.Update_QiteVM_GetBandMemberNameCommand(obj.GetBandMemberNameCommand, phase);
                        this.Update_QiteVM_IsBandMemberNameVisible(obj.IsBandMemberNameVisible, phase);
                        this.Update_QiteVM_BandMemberName(obj.BandMemberName, phase);
                    }
                }
            }
            private void Update_QiteVM_ClosePopupCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\QitePopup.xaml line 39
                    XamlBindingSetters.Set_Infonet_CStoreCommander_UI_Controls_SmallPopupHeader_CancelCommand(this.obj4, obj, null);
                }
            }
            private void Update_QiteVM_IsSubmitQiteEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\QitePopup.xaml line 98
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj5, obj);
                }
            }
            private void Update_QiteVM_ValidateQiteCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\QitePopup.xaml line 98
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj5, obj, null);
                }
            }
            private void Update_QiteVM_GetBandMemberNameCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\QitePopup.xaml line 68
                    XamlBindingSetters.Set_MyToolkit_Extended_Controls_CustomTextBox_EnterPressedCommand(this.obj6, obj, null);
                }
            }
            private void Update_QiteVM_IsBandMemberNameVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\QitePopup.xaml line 78
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj7, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // Controls\QitePopup.xaml line 86
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_QiteVM_BandMemberName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\QitePopup.xaml line 86
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class QitePopup_obj1_BindingsTracking
            {
                private global::System.WeakReference<QitePopup_obj1_Bindings> weakRefToBindingObj; 

                public QitePopup_obj1_BindingsTracking(QitePopup_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<QitePopup_obj1_Bindings>(obj);
                }

                public QitePopup_obj1_Bindings TryGetBindingObject()
                {
                    QitePopup_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_QiteVM(null);
                }

                public void DependencyPropertyChanged_BackgroundOverlay(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    QitePopup_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Infonet.CStoreCommander.UI.Controls.QitePopup obj = sender as global::Infonet.CStoreCommander.UI.Controls.QitePopup;
                        if (obj != null)
                        {
                            bindings.Update_BackgroundOverlay(obj.BackgroundOverlay, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_BackgroundOverlay = 0;
                public void UpdateChildListeners_(global::Infonet.CStoreCommander.UI.Controls.QitePopup obj)
                {
                    QitePopup_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.QitePopup.BackgroundOverlayProperty, tokenDPC_BackgroundOverlay);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_BackgroundOverlay = obj.RegisterPropertyChangedCallback(global::Infonet.CStoreCommander.UI.Controls.QitePopup.BackgroundOverlayProperty, DependencyPropertyChanged_BackgroundOverlay);
                        }
                    }
                }
                public void PropertyChanged_QiteVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    QitePopup_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.Checkout.QiteVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.Checkout.QiteVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_QiteVM_ClosePopupCommand(obj.ClosePopupCommand, DATA_CHANGED);
                                bindings.Update_QiteVM_IsSubmitQiteEnabled(obj.IsSubmitQiteEnabled, DATA_CHANGED);
                                bindings.Update_QiteVM_ValidateQiteCommand(obj.ValidateQiteCommand, DATA_CHANGED);
                                bindings.Update_QiteVM_GetBandMemberNameCommand(obj.GetBandMemberNameCommand, DATA_CHANGED);
                                bindings.Update_QiteVM_IsBandMemberNameVisible(obj.IsBandMemberNameVisible, DATA_CHANGED);
                                bindings.Update_QiteVM_BandMemberName(obj.BandMemberName, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ClosePopupCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_QiteVM_ClosePopupCommand(obj.ClosePopupCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSubmitQiteEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_QiteVM_IsSubmitQiteEnabled(obj.IsSubmitQiteEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ValidateQiteCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_QiteVM_ValidateQiteCommand(obj.ValidateQiteCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "GetBandMemberNameCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_QiteVM_GetBandMemberNameCommand(obj.GetBandMemberNameCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsBandMemberNameVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_QiteVM_IsBandMemberNameVisible(obj.IsBandMemberNameVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "BandMemberName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_QiteVM_BandMemberName(obj.BandMemberName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.Checkout.QiteVM cache_QiteVM = null;
                public void UpdateChildListeners_QiteVM(global::Infonet.CStoreCommander.UI.ViewModel.Checkout.QiteVM obj)
                {
                    if (obj != cache_QiteVM)
                    {
                        if (cache_QiteVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_QiteVM).PropertyChanged -= PropertyChanged_QiteVM;
                            cache_QiteVM = null;
                        }
                        if (obj != null)
                        {
                            cache_QiteVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_QiteVM;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 4: // Controls\QitePopup.xaml line 39
                {
                    this.TitleText = (global::Infonet.CStoreCommander.UI.Controls.SmallPopupHeader)(target);
                }
                break;
            case 6: // Controls\QitePopup.xaml line 68
                {
                    this.validateBand = (global::MyToolkit.Extended.Controls.CustomTextBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\QitePopup.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    QitePopup_obj1_Bindings bindings = new QitePopup_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

