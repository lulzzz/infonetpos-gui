#pragma checksum "F:\Infonet_final\InfonetUI-UWP_Dev\Infonet.CStoreCommander.UI\View\Customer\AddCustomer.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "5C5AB89E1D2A3ACB21577C97A2169272"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.View.Customer
{
    partial class AddCustomer : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_MyToolkit_Extended_Controls_CustomTextBox_EnterPressedCommand(global::MyToolkit.Extended.Controls.CustomTextBox obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EnterPressedCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AddCustomer_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddCustomer_Bindings
        {
            private global::Infonet.CStoreCommander.UI.View.Customer.AddCustomer dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj2;
            private global::Windows.UI.Xaml.Controls.TextBox obj3;
            private global::Windows.UI.Xaml.Controls.TextBox obj4;
            private global::Windows.UI.Xaml.Controls.TextBox obj5;
            private global::MyToolkit.Extended.Controls.CustomTextBox obj6;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj7;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj8;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj9;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj10;

            private AddCustomer_obj1_BindingsTracking bindingsTracking;

            public AddCustomer_obj1_Bindings()
            {
                this.bindingsTracking = new AddCustomer_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // View\Customer\AddCustomer.xaml line 128
                        this.obj2 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 3: // View\Customer\AddCustomer.xaml line 77
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 4: // View\Customer\AddCustomer.xaml line 89
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // View\Customer\AddCustomer.xaml line 100
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // View\Customer\AddCustomer.xaml line 113
                        this.obj6 = (global::MyToolkit.Extended.Controls.CustomTextBox)target;
                        break;
                    case 7: // View\Customer\AddCustomer.xaml line 121
                        this.obj7 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    case 8: // View\Customer\AddCustomer.xaml line 106
                        this.obj8 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    case 9: // View\Customer\AddCustomer.xaml line 93
                        this.obj9 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    case 10: // View\Customer\AddCustomer.xaml line 82
                        this.obj10 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    default:
                        break;
                }
            }

            // IAddCustomer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Infonet.CStoreCommander.UI.View.Customer.AddCustomer)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.View.Customer.AddCustomer obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_AddCustomerScreenVM(obj.AddCustomerScreenVM, phase);
                    }
                }
            }
            private void Update_AddCustomerScreenVM(global::Infonet.CStoreCommander.UI.ViewModel.Customer.AddCustomerScreenVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_AddCustomerScreenVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_AddCustomerScreenVM_SaveCustomerCommand(obj.SaveCustomerCommand, phase);
                        this.Update_AddCustomerScreenVM_Customer(obj.Customer, phase);
                        this.Update_AddCustomerScreenVM_IsAddingLoyaltyCustomer(obj.IsAddingLoyaltyCustomer, phase);
                        this.Update_AddCustomerScreenVM_InvokeKeyboardCommand(obj.InvokeKeyboardCommand, phase);
                    }
                }
            }
            private void Update_AddCustomerScreenVM_SaveCustomerCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Customer\AddCustomer.xaml line 128
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj2, obj, null);
                    // View\Customer\AddCustomer.xaml line 113
                    XamlBindingSetters.Set_MyToolkit_Extended_Controls_CustomTextBox_EnterPressedCommand(this.obj6, obj, null);
                }
            }
            private void Update_AddCustomerScreenVM_Customer(global::Infonet.CStoreCommander.UI.Model.Customer.CustomerModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_AddCustomerScreenVM_Customer(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_AddCustomerScreenVM_Customer_Code(obj.Code, phase);
                        this.Update_AddCustomerScreenVM_Customer_LoyaltyNumber(obj.LoyaltyNumber, phase);
                        this.Update_AddCustomerScreenVM_Customer_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_AddCustomerScreenVM_Customer_Code(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Customer\AddCustomer.xaml line 77
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj3, obj, null);
                }
            }
            private void Update_AddCustomerScreenVM_IsAddingLoyaltyCustomer(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Customer\AddCustomer.xaml line 77
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj3, obj);
                    // View\Customer\AddCustomer.xaml line 100
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj5, obj);
                    // View\Customer\AddCustomer.xaml line 113
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj6, obj);
                }
            }
            private void Update_AddCustomerScreenVM_Customer_LoyaltyNumber(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Customer\AddCustomer.xaml line 89
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj4, obj, null);
                }
            }
            private void Update_AddCustomerScreenVM_Customer_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Customer\AddCustomer.xaml line 100
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                }
            }
            private void Update_AddCustomerScreenVM_InvokeKeyboardCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Customer\AddCustomer.xaml line 121
                    XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj7, obj, null);
                    // View\Customer\AddCustomer.xaml line 106
                    XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj8, obj, null);
                    // View\Customer\AddCustomer.xaml line 93
                    XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj9, obj, null);
                    // View\Customer\AddCustomer.xaml line 82
                    XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj10, obj, null);
                }
            }
            private void UpdateTwoWay_3_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.AddCustomerScreenVM != null)
                        {
                            if (this.dataRoot.AddCustomerScreenVM.Customer != null)
                            {
                                this.dataRoot.AddCustomerScreenVM.Customer.Code = this.obj3.Text;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_4_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.AddCustomerScreenVM != null)
                        {
                            if (this.dataRoot.AddCustomerScreenVM.Customer != null)
                            {
                                this.dataRoot.AddCustomerScreenVM.Customer.LoyaltyNumber = this.obj4.Text;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.AddCustomerScreenVM != null)
                        {
                            if (this.dataRoot.AddCustomerScreenVM.Customer != null)
                            {
                                this.dataRoot.AddCustomerScreenVM.Customer.Name = this.obj5.Text;
                            }
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AddCustomer_obj1_BindingsTracking
            {
                private global::System.WeakReference<AddCustomer_obj1_Bindings> weakRefToBindingObj; 

                public AddCustomer_obj1_BindingsTracking(AddCustomer_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AddCustomer_obj1_Bindings>(obj);
                }

                public AddCustomer_obj1_Bindings TryGetBindingObject()
                {
                    AddCustomer_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_AddCustomerScreenVM(null);
                    UpdateChildListeners_AddCustomerScreenVM_Customer(null);
                }

                public void PropertyChanged_AddCustomerScreenVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddCustomer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.Customer.AddCustomerScreenVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.Customer.AddCustomerScreenVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_AddCustomerScreenVM_SaveCustomerCommand(obj.SaveCustomerCommand, DATA_CHANGED);
                                bindings.Update_AddCustomerScreenVM_Customer(obj.Customer, DATA_CHANGED);
                                bindings.Update_AddCustomerScreenVM_IsAddingLoyaltyCustomer(obj.IsAddingLoyaltyCustomer, DATA_CHANGED);
                                bindings.Update_AddCustomerScreenVM_InvokeKeyboardCommand(obj.InvokeKeyboardCommand, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SaveCustomerCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AddCustomerScreenVM_SaveCustomerCommand(obj.SaveCustomerCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Customer":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AddCustomerScreenVM_Customer(obj.Customer, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsAddingLoyaltyCustomer":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AddCustomerScreenVM_IsAddingLoyaltyCustomer(obj.IsAddingLoyaltyCustomer, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "InvokeKeyboardCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AddCustomerScreenVM_InvokeKeyboardCommand(obj.InvokeKeyboardCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.Customer.AddCustomerScreenVM cache_AddCustomerScreenVM = null;
                public void UpdateChildListeners_AddCustomerScreenVM(global::Infonet.CStoreCommander.UI.ViewModel.Customer.AddCustomerScreenVM obj)
                {
                    if (obj != cache_AddCustomerScreenVM)
                    {
                        if (cache_AddCustomerScreenVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_AddCustomerScreenVM).PropertyChanged -= PropertyChanged_AddCustomerScreenVM;
                            cache_AddCustomerScreenVM = null;
                        }
                        if (obj != null)
                        {
                            cache_AddCustomerScreenVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_AddCustomerScreenVM;
                        }
                    }
                }
                public void PropertyChanged_AddCustomerScreenVM_Customer(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddCustomer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.Model.Customer.CustomerModel obj = sender as global::Infonet.CStoreCommander.UI.Model.Customer.CustomerModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_AddCustomerScreenVM_Customer_Code(obj.Code, DATA_CHANGED);
                                bindings.Update_AddCustomerScreenVM_Customer_LoyaltyNumber(obj.LoyaltyNumber, DATA_CHANGED);
                                bindings.Update_AddCustomerScreenVM_Customer_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Code":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AddCustomerScreenVM_Customer_Code(obj.Code, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LoyaltyNumber":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AddCustomerScreenVM_Customer_LoyaltyNumber(obj.LoyaltyNumber, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AddCustomerScreenVM_Customer_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.Model.Customer.CustomerModel cache_AddCustomerScreenVM_Customer = null;
                public void UpdateChildListeners_AddCustomerScreenVM_Customer(global::Infonet.CStoreCommander.UI.Model.Customer.CustomerModel obj)
                {
                    if (obj != cache_AddCustomerScreenVM_Customer)
                    {
                        if (cache_AddCustomerScreenVM_Customer != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_AddCustomerScreenVM_Customer).PropertyChanged -= PropertyChanged_AddCustomerScreenVM_Customer;
                            cache_AddCustomerScreenVM_Customer = null;
                        }
                        if (obj != null)
                        {
                            cache_AddCustomerScreenVM_Customer = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_AddCustomerScreenVM_Customer;
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_4(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_5(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // View\Customer\AddCustomer.xaml line 128
                {
                    this.btnSave = (global::Infonet.CStoreCommander.ControlLib.GenericButton)(target);
                }
                break;
            case 3: // View\Customer\AddCustomer.xaml line 77
                {
                    this.txtCode = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 4: // View\Customer\AddCustomer.xaml line 89
                {
                    this.txtLoyalityNumber = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 5: // View\Customer\AddCustomer.xaml line 100
                {
                    this.txtName = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 6: // View\Customer\AddCustomer.xaml line 113
                {
                    this.txtPhone = (global::MyToolkit.Extended.Controls.CustomTextBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\Customer\AddCustomer.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AddCustomer_obj1_Bindings bindings = new AddCustomer_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

