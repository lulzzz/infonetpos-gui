#pragma checksum "F:\Infonet_final\InfonetUI-UWP_Dev\Infonet.CStoreCommander.UI\View\Payments\AR.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "38EF2B07CBA0AD87C33D0D90AAE7B51F"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.View.Payments
{
    partial class AR : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_WinRT_Triggers_InvokeCommandAction_Command(global::WinRT.Triggers.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_MyToolkit_Controls_DataGrid_SelectedItem(global::MyToolkit.Controls.DataGrid obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_MyToolkit_Controls_DataGrid_ItemsSource(global::MyToolkit.Controls.DataGrid obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_MyToolkit_Extended_Controls_CustomTextBox_EnterPressedCommand(global::MyToolkit.Extended.Controls.CustomTextBox obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.EnterPressedCommand = value;
            }
            public static void Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AR_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAR_Bindings
        {
            private global::Infonet.CStoreCommander.UI.View.Payments.AR dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::WinRT.Triggers.InvokeCommandAction obj2;
            private global::Windows.UI.Xaml.Controls.StackPanel obj3;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.TextBlock obj6;
            private global::MyToolkit.Extended.Controls.CustomTextBox obj7;
            private global::MyToolkit.Controls.DataGrid obj8;
            private global::WinRT.Triggers.InvokeCommandAction obj9;
            private global::WinRT.Triggers.InvokeCommandAction obj10;
            private global::MyToolkit.Extended.Controls.CustomTextBox obj11;
            private global::Windows.UI.Xaml.Controls.Button obj12;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj13;

            private AR_obj1_BindingsTracking bindingsTracking;

            public AR_obj1_Bindings()
            {
                this.bindingsTracking = new AR_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // View\Payments\AR.xaml line 18
                        this.obj2 = (global::WinRT.Triggers.InvokeCommandAction)target;
                        break;
                    case 3: // View\Payments\AR.xaml line 199
                        this.obj3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 4: // View\Payments\AR.xaml line 218
                        this.obj4 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 5: // View\Payments\AR.xaml line 213
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 6: // View\Payments\AR.xaml line 206
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 7: // View\Payments\AR.xaml line 114
                        this.obj7 = (global::MyToolkit.Extended.Controls.CustomTextBox)target;
                        break;
                    case 8: // View\Payments\AR.xaml line 137
                        this.obj8 = (global::MyToolkit.Controls.DataGrid)target;
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // View\Payments\AR.xaml line 150
                        this.obj9 = (global::WinRT.Triggers.InvokeCommandAction)target;
                        break;
                    case 10: // View\Payments\AR.xaml line 129
                        this.obj10 = (global::WinRT.Triggers.InvokeCommandAction)target;
                        break;
                    case 11: // View\Payments\AR.xaml line 88
                        this.obj11 = (global::MyToolkit.Extended.Controls.CustomTextBox)target;
                        break;
                    case 12: // View\Payments\AR.xaml line 102
                        this.obj12 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 13: // View\Payments\AR.xaml line 97
                        this.obj13 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    default:
                        break;
                }
            }

            // IAR_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Infonet.CStoreCommander.UI.View.Payments.AR)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.View.Payments.AR obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ARVM(obj.ARVM, phase);
                    }
                }
            }
            private void Update_ARVM(global::Infonet.CStoreCommander.UI.ViewModel.Payment.ARVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ARVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ARVM_LoadAllARCustomer(obj.LoadAllARCustomer, phase);
                        this.Update_ARVM_IsSelectedCustomerNotEmpty(obj.IsSelectedCustomerNotEmpty, phase);
                        this.Update_ARVM_CompletePaymentCommand(obj.CompletePaymentCommand, phase);
                        this.Update_ARVM_IsCompleteButtonEnabled(obj.IsCompleteButtonEnabled, phase);
                        this.Update_ARVM_SelectedARCustomer(obj.SelectedARCustomer, phase);
                        this.Update_ARVM_Customers(obj.Customers, phase);
                        this.Update_ARVM_RefreshCommand(obj.RefreshCommand, phase);
                        this.Update_ARVM_AmountEnteredCommand(obj.AmountEnteredCommand, phase);
                        this.Update_ARVM_SearchCommand(obj.SearchCommand, phase);
                        this.Update_ARVM_SearchCustomerCommand(obj.SearchCustomerCommand, phase);
                        this.Update_ARVM_InvokeKeyboardCommand(obj.InvokeKeyboardCommand, phase);
                    }
                }
            }
            private void Update_ARVM_LoadAllARCustomer(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 18
                    XamlBindingSetters.Set_WinRT_Triggers_InvokeCommandAction_Command(this.obj2, obj, null);
                }
            }
            private void Update_ARVM_IsSelectedCustomerNotEmpty(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 199
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_ARVM_CompletePaymentCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 218
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj4, obj, null);
                }
            }
            private void Update_ARVM_IsCompleteButtonEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 218
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj4, obj);
                }
            }
            private void Update_ARVM_SelectedARCustomer(global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ARVM_SelectedARCustomer(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ARVM_SelectedARCustomer_CreditLimit(obj.CreditLimit, phase);
                        this.Update_ARVM_SelectedARCustomer_Balance(obj.Balance, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 114
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj7, (global::System.Boolean)this.LookupConverter("IsEnableConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    // View\Payments\AR.xaml line 137
                    XamlBindingSetters.Set_MyToolkit_Controls_DataGrid_SelectedItem(this.obj8, (global::System.Object)this.LookupConverter("NothingConverter").Convert(obj, typeof(global::System.Object), null, null), null);
                }
            }
            private void Update_ARVM_SelectedARCustomer_CreditLimit(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 213
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                }
            }
            private void Update_ARVM_SelectedARCustomer_Balance(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 206
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj6, obj, null);
                }
            }
            private void Update_ARVM_Customers(global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ARVM_Customers(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 137
                    XamlBindingSetters.Set_MyToolkit_Controls_DataGrid_ItemsSource(this.obj8, obj, null);
                }
            }
            private void Update_ARVM_RefreshCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 150
                    XamlBindingSetters.Set_WinRT_Triggers_InvokeCommandAction_Command(this.obj9, obj, null);
                }
            }
            private void Update_ARVM_AmountEnteredCommand(global::GalaSoft.MvvmLight.Command.RelayCommand<global::System.Object> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 129
                    XamlBindingSetters.Set_WinRT_Triggers_InvokeCommandAction_Command(this.obj10, obj, null);
                }
            }
            private void Update_ARVM_SearchCommand(global::GalaSoft.MvvmLight.Command.RelayCommand<global::System.Object> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 88
                    XamlBindingSetters.Set_MyToolkit_Extended_Controls_CustomTextBox_EnterPressedCommand(this.obj11, obj, null);
                }
            }
            private void Update_ARVM_SearchCustomerCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 102
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj12, obj, null);
                }
            }
            private void Update_ARVM_InvokeKeyboardCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Payments\AR.xaml line 97
                    XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj13, obj, null);
                }
            }
            private void UpdateTwoWay_8_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ARVM != null)
                        {
                            this.dataRoot.ARVM.SelectedARCustomer = (global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel)this.LookupConverter("NothingConverter").ConvertBack(this.obj8.SelectedItem, typeof(global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel), null, null);
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AR_obj1_BindingsTracking
            {
                private global::System.WeakReference<AR_obj1_Bindings> weakRefToBindingObj; 

                public AR_obj1_BindingsTracking(AR_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AR_obj1_Bindings>(obj);
                }

                public AR_obj1_Bindings TryGetBindingObject()
                {
                    AR_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ARVM(null);
                    UpdateChildListeners_ARVM_SelectedARCustomer(null);
                    UpdateChildListeners_ARVM_Customers(null);
                }

                public void PropertyChanged_ARVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AR_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.Payment.ARVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.Payment.ARVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ARVM_LoadAllARCustomer(obj.LoadAllARCustomer, DATA_CHANGED);
                                bindings.Update_ARVM_IsSelectedCustomerNotEmpty(obj.IsSelectedCustomerNotEmpty, DATA_CHANGED);
                                bindings.Update_ARVM_CompletePaymentCommand(obj.CompletePaymentCommand, DATA_CHANGED);
                                bindings.Update_ARVM_IsCompleteButtonEnabled(obj.IsCompleteButtonEnabled, DATA_CHANGED);
                                bindings.Update_ARVM_SelectedARCustomer(obj.SelectedARCustomer, DATA_CHANGED);
                                bindings.Update_ARVM_Customers(obj.Customers, DATA_CHANGED);
                                bindings.Update_ARVM_RefreshCommand(obj.RefreshCommand, DATA_CHANGED);
                                bindings.Update_ARVM_AmountEnteredCommand(obj.AmountEnteredCommand, DATA_CHANGED);
                                bindings.Update_ARVM_SearchCommand(obj.SearchCommand, DATA_CHANGED);
                                bindings.Update_ARVM_SearchCustomerCommand(obj.SearchCustomerCommand, DATA_CHANGED);
                                bindings.Update_ARVM_InvokeKeyboardCommand(obj.InvokeKeyboardCommand, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "LoadAllARCustomer":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_LoadAllARCustomer(obj.LoadAllARCustomer, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSelectedCustomerNotEmpty":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_IsSelectedCustomerNotEmpty(obj.IsSelectedCustomerNotEmpty, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CompletePaymentCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_CompletePaymentCommand(obj.CompletePaymentCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsCompleteButtonEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_IsCompleteButtonEnabled(obj.IsCompleteButtonEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedARCustomer":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_SelectedARCustomer(obj.SelectedARCustomer, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Customers":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_Customers(obj.Customers, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RefreshCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_RefreshCommand(obj.RefreshCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AmountEnteredCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_AmountEnteredCommand(obj.AmountEnteredCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_SearchCommand(obj.SearchCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchCustomerCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_SearchCustomerCommand(obj.SearchCustomerCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "InvokeKeyboardCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_InvokeKeyboardCommand(obj.InvokeKeyboardCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.Payment.ARVM cache_ARVM = null;
                public void UpdateChildListeners_ARVM(global::Infonet.CStoreCommander.UI.ViewModel.Payment.ARVM obj)
                {
                    if (obj != cache_ARVM)
                    {
                        if (cache_ARVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ARVM).PropertyChanged -= PropertyChanged_ARVM;
                            cache_ARVM = null;
                        }
                        if (obj != null)
                        {
                            cache_ARVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ARVM;
                        }
                    }
                }
                public void PropertyChanged_ARVM_SelectedARCustomer(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AR_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel obj = sender as global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ARVM_SelectedARCustomer_CreditLimit(obj.CreditLimit, DATA_CHANGED);
                                bindings.Update_ARVM_SelectedARCustomer_Balance(obj.Balance, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CreditLimit":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_SelectedARCustomer_CreditLimit(obj.CreditLimit, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Balance":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ARVM_SelectedARCustomer_Balance(obj.Balance, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel cache_ARVM_SelectedARCustomer = null;
                public void UpdateChildListeners_ARVM_SelectedARCustomer(global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel obj)
                {
                    if (obj != cache_ARVM_SelectedARCustomer)
                    {
                        if (cache_ARVM_SelectedARCustomer != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ARVM_SelectedARCustomer).PropertyChanged -= PropertyChanged_ARVM_SelectedARCustomer;
                            cache_ARVM_SelectedARCustomer = null;
                        }
                        if (obj != null)
                        {
                            cache_ARVM_SelectedARCustomer = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ARVM_SelectedARCustomer;
                        }
                    }
                }
                public void PropertyChanged_ARVM_Customers(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AR_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ARVM_Customers(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AR_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel> cache_ARVM_Customers = null;
                public void UpdateChildListeners_ARVM_Customers(global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.Payment.ARCustomerModel> obj)
                {
                    if (obj != cache_ARVM_Customers)
                    {
                        if (cache_ARVM_Customers != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ARVM_Customers).PropertyChanged -= PropertyChanged_ARVM_Customers;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ARVM_Customers).CollectionChanged -= CollectionChanged_ARVM_Customers;
                            cache_ARVM_Customers = null;
                        }
                        if (obj != null)
                        {
                            cache_ARVM_Customers = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ARVM_Customers;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ARVM_Customers;
                        }
                    }
                }
                public void RegisterTwoWayListener_8(global::MyToolkit.Controls.DataGrid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::MyToolkit.Controls.DataGrid.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_SelectedItem();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 7: // View\Payments\AR.xaml line 114
                {
                    this.amount = (global::MyToolkit.Extended.Controls.CustomTextBox)(target);
                }
                break;
            case 8: // View\Payments\AR.xaml line 137
                {
                    this.CustomersList = (global::MyToolkit.Controls.DataGrid)(target);
                }
                break;
            case 11: // View\Payments\AR.xaml line 88
                {
                    this.txtCustomerSearch = (global::MyToolkit.Extended.Controls.CustomTextBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\Payments\AR.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AR_obj1_Bindings bindings = new AR_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

