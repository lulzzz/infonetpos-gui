#pragma checksum "F:\Infonet_final\InfonetUI-UWP_Dev\Infonet.CStoreCommander.UI\View\Prepay\Prepay.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "B336FC7CEB5662D7E4EEEC66FD74953A"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.View.Prepay
{
    partial class Prepay : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Infonet_CStoreCommander_UI_Controls_ViewHeading_BackCommand(global::Infonet.CStoreCommander.UI.Controls.ViewHeading obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.BackCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_WinRT_Triggers_InvokeCommandAction_Command(global::WinRT.Triggers.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class Prepay_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPrepay_Bindings
        {
            private global::Infonet.CStoreCommander.UI.View.Prepay.Prepay dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Infonet.CStoreCommander.UI.Controls.ViewHeading obj2;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj3;
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.ComboBox obj6;
            private global::Windows.UI.Xaml.Controls.ComboBox obj7;
            private global::Windows.UI.Xaml.Controls.ComboBox obj8;
            private global::Windows.UI.Xaml.Controls.TextBox obj9;
            private global::WinRT.Triggers.InvokeCommandAction obj10;

            private Prepay_obj1_BindingsTracking bindingsTracking;

            public Prepay_obj1_Bindings()
            {
                this.bindingsTracking = new Prepay_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // View\Prepay\Prepay.xaml line 60
                        this.obj2 = (global::Infonet.CStoreCommander.UI.Controls.ViewHeading)target;
                        break;
                    case 3: // View\Prepay\Prepay.xaml line 107
                        this.obj3 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 4: // View\Prepay\Prepay.xaml line 113
                        this.obj4 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 5: // View\Prepay\Prepay.xaml line 69
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 6: // View\Prepay\Prepay.xaml line 74
                        this.obj6 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // View\Prepay\Prepay.xaml line 79
                        this.obj7 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // View\Prepay\Prepay.xaml line 84
                        this.obj8 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // View\Prepay\Prepay.xaml line 89
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // View\Prepay\Prepay.xaml line 99
                        this.obj10 = (global::WinRT.Triggers.InvokeCommandAction)target;
                        break;
                    default:
                        break;
                }
            }

            // IPrepay_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Infonet.CStoreCommander.UI.View.Prepay.Prepay)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.View.Prepay.Prepay obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PrepayVM(obj.PrepayVM, phase);
                    }
                }
            }
            private void Update_PrepayVM(global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PrepayVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PrepayVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PrepayVM_BackCommand(obj.BackCommand, phase);
                        this.Update_PrepayVM_SetPrepayCommand(obj.SetPrepayCommand, phase);
                        this.Update_PrepayVM_IsSetPrepayEnable(obj.IsSetPrepayEnable, phase);
                        this.Update_PrepayVM_IsSetPrepayVisible(obj.IsSetPrepayVisible, phase);
                        this.Update_PrepayVM_SwitchPrepayCommand(obj.SwitchPrepayCommand, phase);
                        this.Update_PrepayVM_IsSwitchPrepayEnable(obj.IsSwitchPrepayEnable, phase);
                        this.Update_PrepayVM_IsSwitchPrepayVisible(obj.IsSwitchPrepayVisible, phase);
                        this.Update_PrepayVM_PrepayTitle(obj.PrepayTitle, phase);
                        this.Update_PrepayVM_IsGradeVisible(obj.IsGradeVisible, phase);
                        this.Update_PrepayVM_GradeTypes(obj.GradeTypes, phase);
                        this.Update_PrepayVM_SelectedGradeIndex(obj.SelectedGradeIndex, phase);
                        this.Update_PrepayVM_IsCashTypeEnable(obj.IsCashTypeEnable, phase);
                        this.Update_PrepayVM_CashTypes(obj.CashTypes, phase);
                        this.Update_PrepayVM_SelectedCashIndex(obj.SelectedCashIndex, phase);
                        this.Update_PrepayVM_PumpList(obj.PumpList, phase);
                        this.Update_PrepayVM_IsPumpListVisible(obj.IsPumpListVisible, phase);
                        this.Update_PrepayVM_SelectedPumpNumberIndex(obj.SelectedPumpNumberIndex, phase);
                        this.Update_PrepayVM_IsAmountVisible(obj.IsAmountVisible, phase);
                        this.Update_PrepayVM_Amount(obj.Amount, phase);
                        this.Update_PrepayVM_OpenKeyPadCommand(obj.OpenKeyPadCommand, phase);
                    }
                }
            }
            private void Update_PrepayVM_BackCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 60
                    XamlBindingSetters.Set_Infonet_CStoreCommander_UI_Controls_ViewHeading_BackCommand(this.obj2, obj, null);
                }
            }
            private void Update_PrepayVM_SetPrepayCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 107
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj3, obj, null);
                }
            }
            private void Update_PrepayVM_IsSetPrepayEnable(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 107
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj3, obj);
                }
            }
            private void Update_PrepayVM_IsSetPrepayVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 107
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_PrepayVM_SwitchPrepayCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 113
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj4, obj, null);
                }
            }
            private void Update_PrepayVM_IsSwitchPrepayEnable(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 113
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj4, obj);
                }
            }
            private void Update_PrepayVM_IsSwitchPrepayVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 113
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_PrepayVM_PrepayTitle(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 69
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                }
            }
            private void Update_PrepayVM_IsGradeVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 74
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj6, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_PrepayVM_GradeTypes(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PrepayVM_GradeTypes(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 74
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                }
            }
            private void Update_PrepayVM_SelectedGradeIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 74
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj6, obj);
                }
            }
            private void Update_PrepayVM_IsCashTypeEnable(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 79
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj7, obj);
                }
            }
            private void Update_PrepayVM_CashTypes(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PrepayVM_CashTypes(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 79
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj7, obj, null);
                }
            }
            private void Update_PrepayVM_SelectedCashIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 79
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj7, obj);
                }
            }
            private void Update_PrepayVM_PumpList(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PrepayVM_PumpList(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 84
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj8, obj, null);
                }
            }
            private void Update_PrepayVM_IsPumpListVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 84
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_PrepayVM_SelectedPumpNumberIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 84
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj8, obj);
                }
            }
            private void Update_PrepayVM_IsAmountVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 89
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_PrepayVM_Amount(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 89
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj9, obj, null);
                }
            }
            private void Update_PrepayVM_OpenKeyPadCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\Prepay\Prepay.xaml line 99
                    XamlBindingSetters.Set_WinRT_Triggers_InvokeCommandAction_Command(this.obj10, obj, null);
                }
            }
            private void UpdateTwoWay_6_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PrepayVM != null)
                        {
                            this.dataRoot.PrepayVM.SelectedGradeIndex = this.obj6.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PrepayVM != null)
                        {
                            this.dataRoot.PrepayVM.SelectedCashIndex = this.obj7.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PrepayVM != null)
                        {
                            this.dataRoot.PrepayVM.SelectedPumpNumberIndex = this.obj8.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PrepayVM != null)
                        {
                            this.dataRoot.PrepayVM.Amount = this.obj9.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class Prepay_obj1_BindingsTracking
            {
                private global::System.WeakReference<Prepay_obj1_Bindings> weakRefToBindingObj; 

                public Prepay_obj1_BindingsTracking(Prepay_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<Prepay_obj1_Bindings>(obj);
                }

                public Prepay_obj1_Bindings TryGetBindingObject()
                {
                    Prepay_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_PrepayVM(null);
                    UpdateChildListeners_PrepayVM_GradeTypes(null);
                    UpdateChildListeners_PrepayVM_CashTypes(null);
                    UpdateChildListeners_PrepayVM_PumpList(null);
                }

                public void PropertyChanged_PrepayVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Prepay_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PrepayVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PrepayVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PrepayVM_BackCommand(obj.BackCommand, DATA_CHANGED);
                                bindings.Update_PrepayVM_SetPrepayCommand(obj.SetPrepayCommand, DATA_CHANGED);
                                bindings.Update_PrepayVM_IsSetPrepayEnable(obj.IsSetPrepayEnable, DATA_CHANGED);
                                bindings.Update_PrepayVM_IsSetPrepayVisible(obj.IsSetPrepayVisible, DATA_CHANGED);
                                bindings.Update_PrepayVM_SwitchPrepayCommand(obj.SwitchPrepayCommand, DATA_CHANGED);
                                bindings.Update_PrepayVM_IsSwitchPrepayEnable(obj.IsSwitchPrepayEnable, DATA_CHANGED);
                                bindings.Update_PrepayVM_IsSwitchPrepayVisible(obj.IsSwitchPrepayVisible, DATA_CHANGED);
                                bindings.Update_PrepayVM_PrepayTitle(obj.PrepayTitle, DATA_CHANGED);
                                bindings.Update_PrepayVM_IsGradeVisible(obj.IsGradeVisible, DATA_CHANGED);
                                bindings.Update_PrepayVM_GradeTypes(obj.GradeTypes, DATA_CHANGED);
                                bindings.Update_PrepayVM_SelectedGradeIndex(obj.SelectedGradeIndex, DATA_CHANGED);
                                bindings.Update_PrepayVM_IsCashTypeEnable(obj.IsCashTypeEnable, DATA_CHANGED);
                                bindings.Update_PrepayVM_CashTypes(obj.CashTypes, DATA_CHANGED);
                                bindings.Update_PrepayVM_SelectedCashIndex(obj.SelectedCashIndex, DATA_CHANGED);
                                bindings.Update_PrepayVM_PumpList(obj.PumpList, DATA_CHANGED);
                                bindings.Update_PrepayVM_IsPumpListVisible(obj.IsPumpListVisible, DATA_CHANGED);
                                bindings.Update_PrepayVM_SelectedPumpNumberIndex(obj.SelectedPumpNumberIndex, DATA_CHANGED);
                                bindings.Update_PrepayVM_IsAmountVisible(obj.IsAmountVisible, DATA_CHANGED);
                                bindings.Update_PrepayVM_Amount(obj.Amount, DATA_CHANGED);
                                bindings.Update_PrepayVM_OpenKeyPadCommand(obj.OpenKeyPadCommand, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "BackCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_BackCommand(obj.BackCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SetPrepayCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_SetPrepayCommand(obj.SetPrepayCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSetPrepayEnable":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_IsSetPrepayEnable(obj.IsSetPrepayEnable, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSetPrepayVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_IsSetPrepayVisible(obj.IsSetPrepayVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SwitchPrepayCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_SwitchPrepayCommand(obj.SwitchPrepayCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSwitchPrepayEnable":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_IsSwitchPrepayEnable(obj.IsSwitchPrepayEnable, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSwitchPrepayVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_IsSwitchPrepayVisible(obj.IsSwitchPrepayVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PrepayTitle":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_PrepayTitle(obj.PrepayTitle, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsGradeVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_IsGradeVisible(obj.IsGradeVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "GradeTypes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_GradeTypes(obj.GradeTypes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedGradeIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_SelectedGradeIndex(obj.SelectedGradeIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsCashTypeEnable":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_IsCashTypeEnable(obj.IsCashTypeEnable, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CashTypes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_CashTypes(obj.CashTypes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedCashIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_SelectedCashIndex(obj.SelectedCashIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PumpList":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_PumpList(obj.PumpList, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsPumpListVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_IsPumpListVisible(obj.IsPumpListVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedPumpNumberIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_SelectedPumpNumberIndex(obj.SelectedPumpNumberIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsAmountVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_IsAmountVisible(obj.IsAmountVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Amount":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_Amount(obj.Amount, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OpenKeyPadCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PrepayVM_OpenKeyPadCommand(obj.OpenKeyPadCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PrepayVM cache_PrepayVM = null;
                public void UpdateChildListeners_PrepayVM(global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PrepayVM obj)
                {
                    if (obj != cache_PrepayVM)
                    {
                        if (cache_PrepayVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PrepayVM).PropertyChanged -= PropertyChanged_PrepayVM;
                            cache_PrepayVM = null;
                        }
                        if (obj != null)
                        {
                            cache_PrepayVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PrepayVM;
                        }
                    }
                }
                public void PropertyChanged_PrepayVM_GradeTypes(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Prepay_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_PrepayVM_GradeTypes(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    Prepay_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::System.String> cache_PrepayVM_GradeTypes = null;
                public void UpdateChildListeners_PrepayVM_GradeTypes(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj)
                {
                    if (obj != cache_PrepayVM_GradeTypes)
                    {
                        if (cache_PrepayVM_GradeTypes != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PrepayVM_GradeTypes).PropertyChanged -= PropertyChanged_PrepayVM_GradeTypes;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_PrepayVM_GradeTypes).CollectionChanged -= CollectionChanged_PrepayVM_GradeTypes;
                            cache_PrepayVM_GradeTypes = null;
                        }
                        if (obj != null)
                        {
                            cache_PrepayVM_GradeTypes = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PrepayVM_GradeTypes;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_PrepayVM_GradeTypes;
                        }
                    }
                }
                public void PropertyChanged_PrepayVM_CashTypes(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Prepay_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_PrepayVM_CashTypes(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    Prepay_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::System.String> cache_PrepayVM_CashTypes = null;
                public void UpdateChildListeners_PrepayVM_CashTypes(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj)
                {
                    if (obj != cache_PrepayVM_CashTypes)
                    {
                        if (cache_PrepayVM_CashTypes != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PrepayVM_CashTypes).PropertyChanged -= PropertyChanged_PrepayVM_CashTypes;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_PrepayVM_CashTypes).CollectionChanged -= CollectionChanged_PrepayVM_CashTypes;
                            cache_PrepayVM_CashTypes = null;
                        }
                        if (obj != null)
                        {
                            cache_PrepayVM_CashTypes = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PrepayVM_CashTypes;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_PrepayVM_CashTypes;
                        }
                    }
                }
                public void PropertyChanged_PrepayVM_PumpList(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Prepay_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_PrepayVM_PumpList(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    Prepay_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::System.String> cache_PrepayVM_PumpList = null;
                public void UpdateChildListeners_PrepayVM_PumpList(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj)
                {
                    if (obj != cache_PrepayVM_PumpList)
                    {
                        if (cache_PrepayVM_PumpList != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PrepayVM_PumpList).PropertyChanged -= PropertyChanged_PrepayVM_PumpList;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_PrepayVM_PumpList).CollectionChanged -= CollectionChanged_PrepayVM_PumpList;
                            cache_PrepayVM_PumpList = null;
                        }
                        if (obj != null)
                        {
                            cache_PrepayVM_PumpList = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PrepayVM_PumpList;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_PrepayVM_PumpList;
                        }
                    }
                }
                public void RegisterTwoWayListener_6(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Text();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\Prepay\Prepay.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    Prepay_obj1_Bindings bindings = new Prepay_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

