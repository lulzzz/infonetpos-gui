#pragma checksum "F:\Infonet_final\InfonetUI-UWP_Dev\Infonet.CStoreCommander.UI\View\PumpOptions\Propane\PropaneGrade.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "569A0DA5C6D14D968F5411B78BB1C8D1"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infonet.CStoreCommander.UI.View.PumpOptions.Propane
{
    partial class PropaneGrade : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_UIElement_IsHitTestVisible(global::Windows.UI.Xaml.UIElement obj, global::System.Boolean value)
            {
                obj.IsHitTestVisible = value;
            }
            public static void Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class PropaneGrade_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPropaneGrade_Bindings
        {
            private global::Infonet.CStoreCommander.UI.View.PumpOptions.Propane.PropaneGrade dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Infonet.CStoreCommander.ControlLib.GenericButton obj2;
            private global::Windows.UI.Xaml.Controls.ComboBox obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj6;
            private global::Windows.UI.Xaml.Controls.TextBox obj7;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj8;

            private PropaneGrade_obj1_BindingsTracking bindingsTracking;

            public PropaneGrade_obj1_Bindings()
            {
                this.bindingsTracking = new PropaneGrade_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // View\PumpOptions\Propane\PropaneGrade.xaml line 140
                        this.obj2 = (global::Infonet.CStoreCommander.ControlLib.GenericButton)target;
                        break;
                    case 3: // View\PumpOptions\Propane\PropaneGrade.xaml line 66
                        this.obj3 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 4: // View\PumpOptions\Propane\PropaneGrade.xaml line 133
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // View\PumpOptions\Propane\PropaneGrade.xaml line 110
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // View\PumpOptions\Propane\PropaneGrade.xaml line 119
                        this.obj6 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    case 7: // View\PumpOptions\Propane\PropaneGrade.xaml line 78
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // View\PumpOptions\Propane\PropaneGrade.xaml line 86
                        this.obj8 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    default:
                        break;
                }
            }

            // IPropaneGrade_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Infonet.CStoreCommander.UI.View.PumpOptions.Propane.PropaneGrade)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Infonet.CStoreCommander.UI.View.PumpOptions.Propane.PropaneGrade obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PropaneGradeVM(obj.PropaneGradeVM, phase);
                    }
                }
            }
            private void Update_PropaneGradeVM(global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PropaneGrade.PropaneGradeVM obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PropaneGradeVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PropaneGradeVM_IsAcceptEnabled(obj.IsAcceptEnabled, phase);
                        this.Update_PropaneGradeVM_AddPropaneCommand(obj.AddPropaneCommand, phase);
                        this.Update_PropaneGradeVM_Pumps(obj.Pumps, phase);
                        this.Update_PropaneGradeVM_SelectedPumpIndex(obj.SelectedPumpIndex, phase);
                        this.Update_PropaneGradeVM_IsVolumeStringVisible(obj.IsVolumeStringVisible, phase);
                        this.Update_PropaneGradeVM_VolumeString(obj.VolumeString, phase);
                        this.Update_PropaneGradeVM_IsAmountEditTrue(obj.IsAmountEditTrue, phase);
                        this.Update_PropaneGradeVM_Amount(obj.Amount, phase);
                        this.Update_PropaneGradeVM_AmountGotFocusCommand(obj.AmountGotFocusCommand, phase);
                        this.Update_PropaneGradeVM_Volume(obj.Volume, phase);
                        this.Update_PropaneGradeVM_VolumeGotFocusCommand(obj.VolumeGotFocusCommand, phase);
                    }
                }
            }
            private void Update_PropaneGradeVM_IsAcceptEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 140
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj2, obj);
                }
            }
            private void Update_PropaneGradeVM_AddPropaneCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 140
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj2, obj, null);
                }
            }
            private void Update_PropaneGradeVM_Pumps(global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.FuelPump.PropaneModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PropaneGradeVM_Pumps(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 66
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj3, obj, null);
                }
            }
            private void Update_PropaneGradeVM_SelectedPumpIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 66
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj3, obj);
                }
            }
            private void Update_PropaneGradeVM_IsVolumeStringVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 133
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_PropaneGradeVM_VolumeString(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 133
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                }
            }
            private void Update_PropaneGradeVM_IsAmountEditTrue(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 110
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_IsHitTestVisible(this.obj5, obj);
                }
            }
            private void Update_PropaneGradeVM_Amount(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 110
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                }
            }
            private void Update_PropaneGradeVM_AmountGotFocusCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 119
                    XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj6, obj, null);
                }
            }
            private void Update_PropaneGradeVM_Volume(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 78
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj7, obj, null);
                }
            }
            private void Update_PropaneGradeVM_VolumeGotFocusCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\PumpOptions\Propane\PropaneGrade.xaml line 86
                    XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj8, obj, null);
                }
            }
            private void UpdateTwoWay_3_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PropaneGradeVM != null)
                        {
                            this.dataRoot.PropaneGradeVM.SelectedPumpIndex = this.obj3.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PropaneGradeVM != null)
                        {
                            this.dataRoot.PropaneGradeVM.Amount = this.obj5.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PropaneGradeVM != null)
                        {
                            this.dataRoot.PropaneGradeVM.Volume = this.obj7.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class PropaneGrade_obj1_BindingsTracking
            {
                private global::System.WeakReference<PropaneGrade_obj1_Bindings> weakRefToBindingObj; 

                public PropaneGrade_obj1_BindingsTracking(PropaneGrade_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<PropaneGrade_obj1_Bindings>(obj);
                }

                public PropaneGrade_obj1_Bindings TryGetBindingObject()
                {
                    PropaneGrade_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_PropaneGradeVM(null);
                    UpdateChildListeners_PropaneGradeVM_Pumps(null);
                }

                public void PropertyChanged_PropaneGradeVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PropaneGrade_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PropaneGrade.PropaneGradeVM obj = sender as global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PropaneGrade.PropaneGradeVM;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PropaneGradeVM_IsAcceptEnabled(obj.IsAcceptEnabled, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_AddPropaneCommand(obj.AddPropaneCommand, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_Pumps(obj.Pumps, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_SelectedPumpIndex(obj.SelectedPumpIndex, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_IsVolumeStringVisible(obj.IsVolumeStringVisible, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_VolumeString(obj.VolumeString, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_IsAmountEditTrue(obj.IsAmountEditTrue, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_Amount(obj.Amount, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_AmountGotFocusCommand(obj.AmountGotFocusCommand, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_Volume(obj.Volume, DATA_CHANGED);
                                bindings.Update_PropaneGradeVM_VolumeGotFocusCommand(obj.VolumeGotFocusCommand, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsAcceptEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_IsAcceptEnabled(obj.IsAcceptEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AddPropaneCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_AddPropaneCommand(obj.AddPropaneCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Pumps":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_Pumps(obj.Pumps, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedPumpIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_SelectedPumpIndex(obj.SelectedPumpIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsVolumeStringVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_IsVolumeStringVisible(obj.IsVolumeStringVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "VolumeString":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_VolumeString(obj.VolumeString, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsAmountEditTrue":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_IsAmountEditTrue(obj.IsAmountEditTrue, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Amount":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_Amount(obj.Amount, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AmountGotFocusCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_AmountGotFocusCommand(obj.AmountGotFocusCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Volume":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_Volume(obj.Volume, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "VolumeGotFocusCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PropaneGradeVM_VolumeGotFocusCommand(obj.VolumeGotFocusCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PropaneGrade.PropaneGradeVM cache_PropaneGradeVM = null;
                public void UpdateChildListeners_PropaneGradeVM(global::Infonet.CStoreCommander.UI.ViewModel.PumpOptions.PropaneGrade.PropaneGradeVM obj)
                {
                    if (obj != cache_PropaneGradeVM)
                    {
                        if (cache_PropaneGradeVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PropaneGradeVM).PropertyChanged -= PropertyChanged_PropaneGradeVM;
                            cache_PropaneGradeVM = null;
                        }
                        if (obj != null)
                        {
                            cache_PropaneGradeVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PropaneGradeVM;
                        }
                    }
                }
                public void PropertyChanged_PropaneGradeVM_Pumps(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PropaneGrade_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.FuelPump.PropaneModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.FuelPump.PropaneModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_PropaneGradeVM_Pumps(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    PropaneGrade_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.FuelPump.PropaneModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.FuelPump.PropaneModel>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.FuelPump.PropaneModel> cache_PropaneGradeVM_Pumps = null;
                public void UpdateChildListeners_PropaneGradeVM_Pumps(global::System.Collections.ObjectModel.ObservableCollection<global::Infonet.CStoreCommander.UI.Model.FuelPump.PropaneModel> obj)
                {
                    if (obj != cache_PropaneGradeVM_Pumps)
                    {
                        if (cache_PropaneGradeVM_Pumps != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PropaneGradeVM_Pumps).PropertyChanged -= PropertyChanged_PropaneGradeVM_Pumps;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_PropaneGradeVM_Pumps).CollectionChanged -= CollectionChanged_PropaneGradeVM_Pumps;
                            cache_PropaneGradeVM_Pumps = null;
                        }
                        if (obj != null)
                        {
                            cache_PropaneGradeVM_Pumps = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PropaneGradeVM_Pumps;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_PropaneGradeVM_Pumps;
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_5(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_Text();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\PumpOptions\Propane\PropaneGrade.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    PropaneGrade_obj1_Bindings bindings = new PropaneGrade_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

